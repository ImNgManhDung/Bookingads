@using BookingAds.Entities
@using BookingAds.Modules
@using BookingAds.Controllers
@using BookingAds.Entities
@model BookingAds.Models.InformationBookingAds.ViewDetailsProduct
@using BookingAds.Models
@{
    ViewBag.Title = "Chi tiết sản phẩm";

    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentEmployee = ConvertUtils<Employee>.Deserialize(User.Identity.Name);
}
<style>
    .plan {
        border-radius: 16px;
        box-shadow: 0 30px 30px -25px rgba(0, 38, 255, 0.205);
        padding: 10px;
        background-color: #fff;
        color: #697e91;
        /*max-width: 300px;*/
    }

        .plan strong {
            font-weight: 600;
            color: #425275;
        }

        .plan .inner {
            align-items: center;
            padding: 20px;
            padding-top: 40px;
            background-color: #ecf0ff;
            border-radius: 12px;
            position: relative;
        }

        .plan .pricing {
            position: absolute;
            top: 0;
            right: 0;
            background-color: #bed6fb;
            border-radius: 99em 0 0 99em;
            display: flex;
            align-items: center;
            padding: 0.625em 0.75em;
            font-size: 1.25rem;
            font-weight: 600;
            color: #425475;
        }

            .plan .pricing small {
                color: #707a91;
                font-size: 0.75em;
                margin-left: 0.25em;
            }

        .plan .title {
            font-weight: 600;
            font-size: 1.25rem;
            color: #425675;
        }

            .plan .title + * {
                margin-top: 0.75rem;
            }

        .plan .info + * {
            margin-top: 1rem;
        }

        .plan .features {
            display: flex;
            flex-direction: column;
        }

            .plan .features li {
                display: flex;
                align-items: center;
                gap: 0.5rem;
            }

                .plan .features li + * {
                    margin-top: 0.75rem;
                }

            .plan .features .icon {
                background-color: #1FCAC5;
                display: inline-flex;
                align-items: center;
                justify-content: center;
                color: #fff;
                border-radius: 50%;
                width: 20px;
                height: 20px;
            }

                .plan .features .icon svg {
                    width: 14px;
                    height: 14px;
                }

            .plan .features + * {
                margin-top: 1.25rem;
            }

        .plan .action {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: end;
        }

        .plan .button {
            background-color: #6558d3;
            border-radius: 6px;
            color: #fff;
            font-weight: 500;
            font-size: 1.125rem;
            text-align: center;
            border: 0;
            outline: 0;
            width: 100%;
            padding: 0.625em 0.75em;
            text-decoration: none;
        }

            .plan .button:hover, .plan .button:focus {
                background-color: #4133B7;
            }
</style>

<div class="container">
    <div class="col-lg-6 col-lg-offset-3         col-md-4 col-md-offset-4">

        @foreach (var item in Model.Products)
        {
            var product = ConvertUtils<Product>.Serialize(item);


            <div class="plan">
                <div class="inner">
                    <span class="pricing">
                        <span>
                            @item.CatelogProduct.CatelogName
                        </span>
                    </span>
                    <p class="title">@item.ProductName</p>
                    <img class="plan" src="/Images/Products/638510324398226079_tiktok-logo-on-transparent-background-free-vector.jpg" alt="Ảnh quảng cáo" style=" height: 300px;  object-fit: cover; width: 100%; object-fit: contain; margin-right: 10px; position: relative;">

                    <h4 style="padding: 10px 0px 0px 0px;" class="info">Báo Giá : @item.Price đ</h4>
                    @foreach (var item2 in Model.ProductDescription)
                    {

                        <h4 style="color:black; padding: 10px 0px 0px 0px; display: block; word-wrap: break-word; white-space: normal;" class="info"> @item2.DescriptionDetail</h4>
                    }


                    <h4 style="padding: 5px 0px 0px 0px; color:red" class="info">Nội dung của một bài đăng:</h4>

                    <ul class="features" style="padding: 0px 0px 10px 20px; ">


                        @foreach (var item1 in Model.ProductAttributes)

                        {
                            <li>
                                <span class="icon">
                                    <svg height="24" width="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M0 0h24v24H0z" fill="none"></path>
                                        <path fill="currentColor" d="M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z"></path>
                                    </svg>
                                </span>
                                <span><strong>  @item1.AttributeName</strong></span>
                            </li>



                        }



                    </ul>
                    <div class="action">
                        <a class="button" data-toggle="modal" data-target="#@item.ProductID">
                            Đặt dịch vụ
                        </a>
                    </div>
                </div>
            </div>


            <div class="modal fade" id="@item.ProductID" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
                @using (Html.BeginForm("OrderProduct", "InformationBookingAds", FormMethod.Post, new { id = "productForm" }))
                {
                    @Html.AntiForgeryToken();
                    @Html.Hidden("productId", item.ProductID.ToString())
                    @Html.Hidden("employeeId", currentEmployee.EmployeeID.ToString())

                    <div class="modal-dialog">
                        <div class="modal-content" style="border-radius: 10px;">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                </button>
                                <h4 class="modal-title custom_align" id="Heading">Hình thức thanh toán</h4>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <div class="form-control radioPayType">
                                        @Html.RadioButtonFor(model => model.PayType, "WALLET", new { @class = "payType", id = "option1" })
                                        <i class="fa fa-credit-card"></i>
                                        <label for="option1">Ví BookingAds</label><br>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-success" onclick="submitForm()">Đồng ý đặt</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

    </div>
</div>
            <script>
                function submitForm() {
                    if (!$('input[name="PayType"]').is(':checked')) {
                        // Nếu không có RadioButtonFor nào được chọn, hiển thị cảnh báo
                        alert("Vui lòng chọn hình thức thanh toán!");
                        return; // Dừng việc gửi form
                    }
        $.ajax({
            type: "POST",
            url: '@Url.Action("OrderProduct", "InformationBookingAds")',
            data: $("#productForm").serialize(), // Gửi dữ liệu form
            success: function (response) {
                // Chuyển hướng người dùng đến trang mới
                window.location.href = '@Url.Action("Index", "HistoryOrderProduct")';
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }
            </script>







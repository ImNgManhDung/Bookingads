@model BookingAds.Common.Models.Account.ViewChangePassword
@{
    ViewBag.Title = "Đổi Mật Khẩu";
    string failedChangePassword = "Failed Change Password";
}
<style>
    .success-msg {
        font-weight: bold;
    }
    .error-msg {
        color: red;
        font-weight: bold;
    }
    .flex-middle-col {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    .flex-middle {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .icon-lock {
        height: 34px;
        width: 34px;
    }
    .input-distance {
        margin-top: -12px; 
        margin-bottom: 10px;
    }
    .btnChangePassword {
        width: 200px;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-4 col-md-offset-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title text-center">Thay đổi mật khẩu</h3>
                </div>
                <div class="panel-body">
                    @if (ViewData.ModelState.Keys.Contains(failedChangePassword))
                    {
                        <div id="errorLogin" class="error-msg text-center">
                            @ViewData.ModelState.SingleOrDefault(m => m.Key == failedChangePassword).Value.Errors.SingleOrDefault().ErrorMessage
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(ViewBag.Success))
                    {
                        <p class="text-success success-msg">@ViewBag.Success</p>
                    }

                    @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { accept_charset = "UTF-8", 
                        role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <fieldset class="flex-middle-col">
                            <div class="form-group input-group flex-middle">
                                <span class="input-group-addon icon-lock">
                                    <i class="glyphicon glyphicon-lock"></i>
                                </span>
                                @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control", 
                                    placeholder = "Nhập mật khẩu hiện tại...", value = Model == null ? "" : Model.CurrentPassword })
                            </div>
                            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "error-msg input-distance", })

                            <div class="form-group input-group flex-middle">
                                <span class="input-group-addon icon-lock">
                                    <i class="glyphicon glyphicon-lock"></i>
                                </span>
                                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", 
                                    placeholder = "Nhập mật khẩu mới...", value = Model == null ? "" : Model.NewPassword })
                            </div>
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "error-msg input-distance", })

                            <div class="form-group input-group flex-middle">
                                <span class="input-group-addon icon-lock">
                                    <i class="glyphicon glyphicon-lock"></i>
                                </span>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", 
                                    placeholder = "Nhập lại mật khẩu mới...", value = Model == null ? "" : Model.ConfirmPassword })
                            </div>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "error-msg input-distance", })

                            <input class="btn btn-lg btn-success btnChangePassword" type="submit" value="Thay đổi mật khẩu">
                        </fieldset>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



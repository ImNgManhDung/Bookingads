<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio\2022\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="17.0">
 <Namespaces>
  <Namespace Name="BookingAds.Areas.Admin">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Models.Dashboard">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Models.Dashboard' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Models.ManageCatelogProduct">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Models.ManageCatelogProduct' with another namespace.</Issue>
    </Message>
    <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in namespace name 'BookingAds.Areas.Admin.Models.ManageCatelogProduct'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Models.ManageOrder">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Models.ManageOrder' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Models.ManageProduct">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Models.ManageProduct' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.CatelogProduct">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.CatelogProduct' with another namespace.</Issue>
    </Message>
    <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in namespace name 'BookingAds.Areas.Admin.Repository.CatelogProduct'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.CatelogProduct.Abstractions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.CatelogProduct.Abstractions' with another namespace.</Issue>
    </Message>
    <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in namespace name 'BookingAds.Areas.Admin.Repository.CatelogProduct.Abstractions'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.Dashboard">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.Dashboard' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.Employee">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.Employee' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.Employee.Abstractions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.Employee.Abstractions' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.Order">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.Order' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.Order.Abstractions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.Order.Abstractions' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.Product">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.Product' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Areas.Admin.Repository.Supports">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Areas.Admin.Repository.Supports' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Attributes.Filters">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Attributes.Filters' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Common.Models.Account">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Common.Models.Account' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Common.Models.Base">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Common.Models.Base' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Common.Repository.Account">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Common.Repository.Account' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Common.Repository.Account.Abstractions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Common.Repository.Account.Abstractions' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Common.Repository.Employee">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Common.Repository.Employee' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Hubs">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Hubs' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Models.ForgotPassword">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Models.ForgotPassword' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Models.HistoryOrderProduct">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Models.HistoryOrderProduct' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Models.Home">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Models.Home' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Models.Messenger">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Models.Messenger' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Models.ProductOderManager">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Models.ProductOderManager' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Models.Register">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Models.Register' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.ForgotPassword">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.ForgotPassword' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.ForgotPassword.Abstractions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.ForgotPassword.Abstractions' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.HistoryOrderProduct">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.HistoryOrderProduct' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.HistoryOrderProduct.Abstractions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.HistoryOrderProduct.Abstractions' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.InfomationProduct">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.InfomationProduct' with another namespace.</Issue>
    </Message>
    <Message Id="Infomation" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Infomation' in namespace name 'BookingAds.Repository.InfomationProduct'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.InformationBookingAds">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.InformationBookingAds' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.SelectListHelper">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.SelectListHelper' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Repository.Supports">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Repository.Supports' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Services">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Services' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Services.Payment">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Services.Payment' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Services.SendMail">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Services.SendMail' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="BookingAds.Services.SendMail.Abstractions">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'BookingAds.Services.SendMail.Abstractions' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\bin\BookingAds.dll">
   <Modules>
    <Module Name="bookingads.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'BookingAds.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'BookingAds.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'BookingAds.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="BookingAds">
       <Types>
        <Type Name="BundleConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterBundles(System.Web.Optimization.BundleCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\App_Start" File="BundleConfig.cs" Line="12">In externally visible method 'BundleConfig.RegisterBundles(BundleCollection)', validate parameter 'bundles' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FilterConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\App_Start" File="FilterConfig.cs" Line="12">In externally visible method 'FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)', validate parameter 'filters' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MvcApplication" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mvc' in type name 'MvcApplication'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Application_Start()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds" File="Global.asax.cs" Line="16">The 'this' parameter (or 'Me' in Visual Basic) of 'MvcApplication.Application_Start()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Startup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Configuration(Owin.IAppBuilder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds" File="Startup.cs" Line="15">The 'this' parameter (or 'Me' in Visual Basic) of 'Startup.Configuration(IAppBuilder)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebApiConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'WebApiConfig'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Register(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\App_Start" File="WebApiConfig.cs" Line="14">In externally visible method 'WebApiConfig.Register(HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin">
       <Types>
        <Type Name="AdminAreaRegistration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterArea(System.Web.Mvc.AreaRegistrationContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin" File="AdminAreaRegistration.cs" Line="17">In externally visible method 'AdminAreaRegistration.RegisterArea(AreaRegistrationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Controllers">
       <Types>
        <Type Name="AccountController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ChangePassword(BookingAds.Common.Models.Account.ViewChangePassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="114">In method 'AccountController.ChangePassword(ViewChangePassword)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="121">In externally visible method 'AccountController.ChangePassword(ViewChangePassword)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Login()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="57">Replace the term 'Login' in member name 'AccountController.Login()' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Login(BookingAds.Common.Models.Account.ViewLogin)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="74">In method 'AccountController.Login(ViewLogin)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="74">Replace the term 'Login' in member name 'AccountController.Login(ViewLogin)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Logout()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Logout" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="139">Replace the term 'Logout' in member name 'AccountController.Logout()' with the preferred alternate 'LogOff'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Update(System.Web.HttpPostedFileBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="164">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'AccountController.Update(HttpPostedFileBase)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="AccountController.cs" Line="172">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AccountController.Update(HttpPostedFileBase)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManageCatelogProductController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in type name 'ManageCatelogProductController'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Delete(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageCatelogProductController.cs" Line="154">Replace method 'ManageCatelogProductController.Delete(long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageCatelogProductController.cs" Line="154">In member 'ManageCatelogProductController.Delete(long)', correct the casing of 'ID' in parameter name 'catelogID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageCatelogProductController.cs" Line="154">In method 'ManageCatelogProductController.Delete(long)', correct the spelling of 'catelog' in parameter name 'catelogID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManageEmployeeController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Chat(BookingAds.Common.Models.Message.ViewCreateMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="219">In method 'ManageEmployeeController.Chat(ViewCreateMessage)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChatHistory(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="199">Replace method 'ManageEmployeeController.ChatHistory(string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int64,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="286">Replace method 'ManageEmployeeController.Delete(long, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="286">In member 'ManageEmployeeController.Delete(long, string)', correct the casing of 'ID' in parameter name 'messageID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="286">In member 'ManageEmployeeController.Delete(long, string)', correct the casing of 'ID' in parameter name 'senderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(BookingAds.Common.Models.Message.ViewEditMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="259">In method 'ManageEmployeeController.Edit(ViewEditMessage)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Lock(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="103">Replace method 'ManageEmployeeController.Lock(long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="103">In member 'ManageEmployeeController.Lock(long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(BookingAds.Common.Models.Message.ViewReadMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="239">In method 'ManageEmployeeController.Read(ViewReadMessage)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Report()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="164">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ManageEmployeeController.Report()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="165">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ManageEmployeeController.Report()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="166">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ManageEmployeeController.Report()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="167">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ManageEmployeeController.Report()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="175">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ManageEmployeeController.Report()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Unlock(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="123">Replace method 'ManageEmployeeController.Unlock(long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageEmployeeController.cs" Line="123">In member 'ManageEmployeeController.Unlock(long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManageOrderController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_accountRepo" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ManageOrderController._accountRepo' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AcceptGotProduct(System.Int64,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="240">In member 'ManageOrderController.AcceptGotProduct(long, string)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="linksucess" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="240">In method 'ManageOrderController.AcceptGotProduct(long, string)', correct the spelling of 'linksucess' in parameter name 'linksucess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="253">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ManageOrderController.AcceptGotProduct(long, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AcceptNotPayed(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="312">In member 'ManageOrderController.AcceptNotPayed(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Payed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="312">Correct the spelling of 'Payed' in member name 'ManageOrderController.AcceptNotPayed(long)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AcceptPayed(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="286">In member 'ManageOrderController.AcceptPayed(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Payed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="286">Correct the spelling of 'Payed' in member name 'ManageOrderController.AcceptPayed(long)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Approve(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="169">In member 'ManageOrderController.Approve(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="127">In member 'ManageOrderController.Delete(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetailsMess(BookingAds.Areas.Admin.Models.ManageOrder.ViewDetailsMess,System.Collections.Generic.IEnumerable`1&lt;System.Web.HttpPostedFileBase&gt;,System.String,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="357">In member 'ManageOrderController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="357">In method 'ManageOrderController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="currentEmployee" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="404">'ManageOrderController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)' declares a variable, 'currentEmployee', of type 'Employee', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="372">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ManageOrderController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="381">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ManageOrderController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="399">In externally visible method 'ManageOrderController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetailsMess(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="337">In member 'ManageOrderController.DetailsMess(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgDefaultSuccessed" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgDefaultSuccessed' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Successed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Successed' in member name 'ManageOrderController.MsgDefaultSuccessed' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgOrderHaveError" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgOrderHaveError' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgOrderHaveInvalidDateTime" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgOrderHaveInvalidDateTime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgOrderIsGotProduct" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgOrderIsGotProduct' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgOrderIsNotPay" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgOrderIsNotPay' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgOrderIsPay" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgOrderIsPay' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgOrderIsRejected" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgOrderIsRejected' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgOrderNotFound" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgOrderNotFound' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MsgRemoveSuccess" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'ManageOrderController.MsgRemoveSuccess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reject(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageOrderController.cs" Line="208">In member 'ManageOrderController.Reject(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManageProductController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_catelogProductRepo" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ManageProductController._catelogProductRepo' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="121">Replace method 'ManageProductController.Edit(int)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Filter(BookingAds.Areas.Admin.Models.ManageProduct.ViewFilterBookingAds)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="89">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ManageProductController.Filter(ViewFilterBookingAds)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Index()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="63">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ManageProductController.Index()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Restore(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="250">Replace method 'ManageProductController.Restore(long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="250">In member 'ManageProductController.Restore(long)', correct the casing of 'ID' in parameter name 'productID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save(BookingAds.Areas.Admin.Models.ManageProduct.ViewCreateProduct,System.Web.HttpPostedFileBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="147">In method 'ManageProductController.Save(ViewCreateProduct, HttpPostedFileBase)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="167">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ManageProductController.Save(ViewCreateProduct, HttpPostedFileBase)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="176">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ManageProductController.Save(ViewCreateProduct, HttpPostedFileBase)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="159">In externally visible method 'ManageProductController.Save(ViewCreateProduct, HttpPostedFileBase)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="219">In externally visible method 'ManageProductController.Save(ViewCreateProduct, HttpPostedFileBase)', validate parameter 'photoUploaded' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SoftDelete(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="230">Replace method 'ManageProductController.SoftDelete(long)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageProductController.cs" Line="230">In member 'ManageProductController.SoftDelete(long)', correct the casing of 'ID' in parameter name 'productID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManageSupportsController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_acountRepository" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ManageSupportsController._acountRepository' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Details(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageSupportsController.cs" Line="116">In member 'ManageSupportsController.Details(long)', correct the casing of 'ID' in parameter name 'supportsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#KeyErrorOderID" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ManageSupportsController.KeyErrorOderID' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save(BookingAds.Areas.Admin.Models.Supports.ViewDetails,System.Web.HttpPostedFileBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageSupportsController.cs" Line="139">In method 'ManageSupportsController.Save(ViewDetails, HttpPostedFileBase)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="currentEmployee" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageSupportsController.cs" Line="191">'ManageSupportsController.Save(ViewDetails, HttpPostedFileBase)' declares a variable, 'currentEmployee', of type 'Employee', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageSupportsController.cs" Line="166">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ManageSupportsController.Save(ViewDetails, HttpPostedFileBase)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageSupportsController.cs" Line="175">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ManageSupportsController.Save(ViewDetails, HttpPostedFileBase)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Controllers" File="ManageSupportsController.cs" Line="146">In externally visible method 'ManageSupportsController.Save(ViewDetails, HttpPostedFileBase)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueIsNull" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ManageSupportsController.ValueIsNull' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueNotOderID" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ManageSupportsController.ValueNotOderID' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Models.ManageCatelogProduct">
       <Types>
        <Type Name="ViewCreateCatelogProduct" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in type name 'ViewCreateCatelogProduct'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CatelogName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageCatelogProduct" File="ViewCreateCatelogProduct.cs" Line="20">Correct the spelling of 'Catelog' in member name 'ViewCreateCatelogProduct.CatelogName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CatelogProductsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageCatelogProduct" File="ViewCreateCatelogProduct.cs" Line="13">Correct the casing of 'ID' in member name 'ViewCreateCatelogProduct.CatelogProductsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageCatelogProduct" File="ViewCreateCatelogProduct.cs" Line="13">Correct the spelling of 'Catelog' in member name 'ViewCreateCatelogProduct.CatelogProductsID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewFilterCatelogProduct" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in type name 'ViewFilterCatelogProduct'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ViewManageCatelogProduct" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in type name 'ViewManageCatelogProduct'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DataDto" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageCatelogProduct" File="ViewManageCatelogProduct.cs" Line="14">Correct the spelling of 'Dto' in member name 'ViewManageCatelogProduct.DataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Models.ManageEmployee">
       <Types>
        <Type Name="FilterField" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FirstName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'FilterField.FirstName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FullName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'FilterField.FullName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LastName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'FilterField.LastName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FilterGender" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Default" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'FilterGender.Default' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Man" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'FilterGender.Man' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Woman" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'FilterGender.Woman' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Models.ManageOrder">
       <Types>
        <Type Name="SearchField" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EMPLOYEE_FULLNAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EMPLOYEE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EMPLOYEE' in member name 'SearchField.EMPLOYEE_FULLNAME' by changing it to 'Employee'.</Issue>
            </Message>
            <Message Id="FULLNAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FULLNAME' in member name 'SearchField.EMPLOYEE_FULLNAME' by changing it to 'Fullname'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'SearchField.EMPLOYEE_FULLNAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FOOD_NAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FOOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FOOD' in member name 'SearchField.FOOD_NAME' by changing it to 'Food'.</Issue>
            </Message>
            <Message Id="NAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NAME' in member name 'SearchField.FOOD_NAME' by changing it to 'Name'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'SearchField.FOOD_NAME'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewFilterOrder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FromDatetime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Datetime" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageOrder" File="ViewFilterOrder.cs" Line="13">Correct the spelling of 'Datetime' in member name 'ViewFilterOrder.FromDatetime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDatetime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Datetime" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageOrder" File="ViewFilterOrder.cs" Line="15">Correct the spelling of 'Datetime' in member name 'ViewFilterOrder.ToDatetime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewManageOrder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FromDatetime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Datetime" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageOrder" File="ViewManageOrder.cs" Line="14">Correct the spelling of 'Datetime' in member name 'ViewManageOrder.FromDatetime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDatetime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Datetime" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageOrder" File="ViewManageOrder.cs" Line="16">Correct the spelling of 'Datetime' in member name 'ViewManageOrder.ToDatetime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Models.ManageProduct">
       <Types>
        <Type Name="SortField" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Default" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'SortField.Default' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Price" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'SortField.Price' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Quantity" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'SortField.Quantity' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewCreateProduct" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CatelogProductsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageProduct" File="ViewCreateProduct.cs" Line="36">Correct the casing of 'ID' in member name 'ViewCreateProduct.CatelogProductsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageProduct" File="ViewCreateProduct.cs" Line="36">Correct the spelling of 'Catelog' in member name 'ViewCreateProduct.CatelogProductsID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProductID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageProduct" File="ViewCreateProduct.cs" Line="13">Correct the casing of 'ID' in member name 'ViewCreateProduct.ProductID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewFilterBookingAds" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CatelogProductsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageProduct" File="ViewFilterProduct.cs" Line="15">Correct the casing of 'ID' in member name 'ViewFilterBookingAds.CatelogProductsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageProduct" File="ViewFilterProduct.cs" Line="15">Correct the spelling of 'Catelog' in member name 'ViewFilterBookingAds.CatelogProductsID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewManageBookingAds" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CatelogProductsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageProduct" File="ViewManageBookingAds.cs" Line="18">Correct the casing of 'ID' in member name 'ViewManageBookingAds.CatelogProductsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\ManageProduct" File="ViewManageBookingAds.cs" Line="18">Correct the spelling of 'Catelog' in member name 'ViewManageBookingAds.CatelogProductsID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Models.Supports">
       <Types>
        <Type Name="ViewCreate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CatelogProduct" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\Supports" File="ViewCreate.cs" Line="15">Correct the spelling of 'Catelog' in member name 'ViewCreate.CatelogProduct' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\Supports" File="ViewCreate.cs" Line="34">Correct the casing of 'ID' in member name 'ViewCreate.OderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubjectMessener" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Messener" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Models\Supports" File="ViewCreate.cs" Line="29">Correct the spelling of 'Messener' in member name 'ViewCreate.SubjectMessener' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.CatelogProduct">
       <Types>
        <Type Name="CatelogProductRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in type name 'CatelogProductRepository'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CheckCreateCatelogProduct(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\CatelogProduct" File="CatelogProductRepository.cs" Line="202">In member 'CatelogProductRepository.CheckCreateCatelogProduct(string)', change parameter name 'catalogName' to 'catelogName' in order to match the identifier as it has been declared in 'ICatelogProductRepository.CheckCreateCatelogProduct(string)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Count(BookingAds.Areas.Admin.Models.ManageCatelogProduct.ViewFilterCatelogProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\CatelogProduct" File="CatelogProductRepository.cs" Line="38">In externally visible method 'CatelogProductRepository.Count(ViewFilterCatelogProduct)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateCatelogProduct(BookingAds.Areas.Admin.Models.ManageCatelogProduct.ViewCreateCatelogProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\CatelogProduct" File="CatelogProductRepository.cs" Line="159">In externally visible method 'CatelogProductRepository.CreateCatelogProduct(ViewCreateCatelogProduct)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCatelogProducts(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\CatelogProduct" File="CatelogProductRepository.cs" Line="54">In member 'CatelogProductRepository.GetCatelogProducts(long)', change parameter name 'catelogID' to 'id' in order to match the identifier as it has been declared in 'ICatelogProductRepository.GetCatelogProducts(long)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadCatelogProducts(BookingAds.Areas.Admin.Models.ManageCatelogProduct.ViewFilterCatelogProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\CatelogProduct" File="CatelogProductRepository.cs" Line="85">In externally visible method 'CatelogProductRepository.LoadCatelogProducts(ViewFilterCatelogProduct)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCatelogProduct(BookingAds.Areas.Admin.Models.ManageCatelogProduct.ViewCreateCatelogProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\CatelogProduct" File="CatelogProductRepository.cs" Line="118">In externally visible method 'CatelogProductRepository.UpdateCatelogProduct(ViewCreateCatelogProduct)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.CatelogProduct.Abstractions">
       <Types>
        <Type Name="ICatelogProductRepository" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in type name 'ICatelogProductRepository'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CheckCreateCatelogProduct(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in member name 'ICatelogProductRepository.CheckCreateCatelogProduct(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ICatelogProductRepository.CheckCreateCatelogProduct(string)', correct the spelling of 'catelog' in parameter name 'catelogName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateCatelogProduct(BookingAds.Areas.Admin.Models.ManageCatelogProduct.ViewCreateCatelogProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in member name 'ICatelogProductRepository.CreateCatelogProduct(ViewCreateCatelogProduct)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ICatelogProductRepository.CreateCatelogProduct(ViewCreateCatelogProduct)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteCatelogProduct(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'ICatelogProductRepository.DeleteCatelogProduct(long)', correct the casing of 'ID' in parameter name 'catelogID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in member name 'ICatelogProductRepository.DeleteCatelogProduct(long)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ICatelogProductRepository.DeleteCatelogProduct(long)', correct the spelling of 'catelog' in parameter name 'catelogID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCatelogProducts()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in member name 'ICatelogProductRepository.GetCatelogProducts()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCatelogProducts(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in member name 'ICatelogProductRepository.GetCatelogProducts(long)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadCatelogProducts(BookingAds.Areas.Admin.Models.ManageCatelogProduct.ViewFilterCatelogProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in member name 'ICatelogProductRepository.LoadCatelogProducts(ViewFilterCatelogProduct)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCatelogProduct(BookingAds.Areas.Admin.Models.ManageCatelogProduct.ViewCreateCatelogProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in member name 'ICatelogProductRepository.UpdateCatelogProduct(ViewCreateCatelogProduct)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ICatelogProductRepository.UpdateCatelogProduct(ViewCreateCatelogProduct)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.Dashboard">
       <Types>
        <Type Name="DashboardRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CountRevenue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Dashboard" File="DashboardRepository.cs" Line="65">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DashboardRepository.CountRevenue()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenRevenueOfCurrentMonthStatisticTempTable()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Dashboard" File="DashboardRepository.cs" Line="117">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DashboardRepository.GenRevenueOfCurrentMonthStatisticTempTable()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.Employee">
       <Types>
        <Type Name="EmployeeRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Count(BookingAds.Areas.Admin.Models.ManageEmployee.ViewFilterEmployee)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Employee" File="EmployeeRepository.cs" Line="30">In externally visible method 'EmployeeRepository.Count(ViewFilterEmployee)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEmployees(BookingAds.Areas.Admin.Models.ManageEmployee.ViewFilterEmployee)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Employee" File="EmployeeRepository.cs" Line="67">In externally visible method 'EmployeeRepository.GetEmployees(ViewFilterEmployee)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateStatusAccount(System.Int32,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Employee" File="EmployeeRepository.cs" Line="87">In member 'EmployeeRepository.UpdateStatusAccount(int, long)', change parameter name 'employeeId' to 'employeeID' in order to match the identifier as it has been declared in 'IEmployeeRepository.UpdateStatusAccount(int, long)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.Employee.Abstractions">
       <Types>
        <Type Name="IEmployeeRepository" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UpdateStatusAccount(System.Int32,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IEmployeeRepository.UpdateStatusAccount(int, long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.Order">
       <Types>
        <Type Name="OrderRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AcceptGotProduct(System.Int64,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="52">In member 'OrderRepository.AcceptGotProduct(long, string)', change parameter name 'linkget' to 'link' in order to match the identifier as it has been declared in 'IOrderRepository.AcceptGotProduct(long, string)'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="66">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderRepository.AcceptGotProduct(long, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AcceptNotPay(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="109">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderRepository.AcceptNotPay(long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AcceptPayed(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="149">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderRepository.AcceptPayed(long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Approve(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="189">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderRepository.Approve(long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Count(BookingAds.Areas.Admin.Models.ManageOrder.ViewFilterOrder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="230">In externally visible method 'OrderRepository.Count(ViewFilterOrder)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDetailMess(BookingAds.Areas.Admin.Models.ManageOrder.ViewDetailsMess)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="657">Method 'OrderRepository.CreateDetailMess(ViewDetailsMess)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="655">Modify 'OrderRepository.CreateDetailMess(ViewDetailsMess)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="639">'OrderRepository.CreateDetailMess(ViewDetailsMess)' declares a variable, 'i', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="657">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderRepository.CreateDetailMess(ViewDetailsMess)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="594">In externally visible method 'OrderRepository.CreateDetailMess(ViewDetailsMess)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteAllOrdersAreRejectedOrCanceled()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="278">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'OrderRepository.DeleteAllOrdersAreRejectedOrCanceled()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrders(BookingAds.Areas.Admin.Models.ManageOrder.ViewFilterOrder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="375">In externally visible method 'OrderRepository.GetOrders(ViewFilterOrder)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPhone(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="22">In member 'OrderRepository.GetPhone(long)', change parameter name 'orderId' to 'orderID' in order to match the identifier as it has been declared in 'IOrderRepository.GetPhone(long)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reject(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Order" File="OrderRepository.cs" Line="419">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderRepository.Reject(long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.Order.Abstractions">
       <Types>
        <Type Name="IOrderRepository" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AcceptGotProduct(System.Int64,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.AcceptGotProduct(long, string)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AcceptNotPay(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.AcceptNotPay(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AcceptPayed(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.AcceptPayed(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Payed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Payed' in member name 'IOrderRepository.AcceptPayed(long)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Approve(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.Approve(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDetailMess(BookingAds.Areas.Admin.Models.ManageOrder.ViewDetailsMess)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IOrderRepository.CreateDetailMess(ViewDetailsMess)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.Delete(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrder(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.GetOrder(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPhone(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.GetPhone(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadDetailMess(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.LoadDetailMess(long)', correct the casing of 'ID' in parameter name 'oderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reject(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IOrderRepository.Reject(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.Product">
       <Types>
        <Type Name="ProductRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Count(BookingAds.Areas.Admin.Models.ManageProduct.ViewFilterBookingAds)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Product" File="ProductRepository.cs" Line="165">In externally visible method 'ProductRepository.Count(ViewFilterBookingAds)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateProduct(BookingAds.Areas.Admin.Models.ManageProduct.ViewCreateProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Product" File="ProductRepository.cs" Line="49">In externally visible method 'ProductRepository.CreateProduct(ViewCreateProduct)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetProducts(BookingAds.Areas.Admin.Models.ManageProduct.ViewFilterBookingAds)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Product" File="ProductRepository.cs" Line="126">In externally visible method 'ProductRepository.GetProducts(ViewFilterBookingAds)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateProduct(BookingAds.Areas.Admin.Models.ManageProduct.ViewCreateProduct)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Product" File="ProductRepository.cs" Line="281">In externally visible method 'ProductRepository.UpdateProduct(ViewCreateProduct)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Areas.Admin.Repository.Supports">
       <Types>
        <Type Name="SupportsRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Count(BookingAds.Areas.Admin.Models.Supports.ViewFilterSupports)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Supports" File="SupportsRepository.cs" Line="28">In externally visible method 'SupportsRepository.Count(ViewFilterSupports)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSupportsDetail(BookingAds.Areas.Admin.Models.Supports.ViewDetails)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Supports" File="SupportsRepository.cs" Line="106">Method 'SupportsRepository.CreateSupportsDetail(ViewDetails)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Supports" File="SupportsRepository.cs" Line="104">Modify 'SupportsRepository.CreateSupportsDetail(ViewDetails)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="data" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Supports" File="SupportsRepository.cs" Line="58">'SupportsRepository.CreateSupportsDetail(ViewDetails)' declares a variable, 'data', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Supports" File="SupportsRepository.cs" Line="106">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SupportsRepository.CreateSupportsDetail(ViewDetails)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Supports" File="SupportsRepository.cs" Line="78">In externally visible method 'SupportsRepository.CreateSupportsDetail(ViewDetails)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadSupport(BookingAds.Areas.Admin.Models.Supports.ViewFilterSupports)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Areas\Admin\Repository\Supports" File="SupportsRepository.cs" Line="199">In externally visible method 'SupportsRepository.LoadSupport(ViewFilterSupports)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Attributes.Filters">
       <Types>
        <Type Name="HandleAntiforgeryTokenErrorAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'HandleAntiforgeryTokenErrorAttribute', if possible.</Issue>
          </Message>
          <Message Id="Antiforgery" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Antiforgery' in type name 'HandleAntiforgeryTokenErrorAttribute'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">Even though attribute 'HandleAntiforgeryTokenErrorAttribute' inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnException(System.Web.Mvc.ExceptionContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Filters" File="HandleAntiforgeryTokenErrorAttribute.cs" Line="14">In externally visible method 'HandleAntiforgeryTokenErrorAttribute.OnException(ExceptionContext)', validate parameter 'filterContext' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RoleFilterAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AuthorizeCore(System.Web.HttpContextBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Filters" File="RoleFilterAttribute.cs" Line="67">In externally visible method 'RoleFilterAttribute.AuthorizeCore(HttpContextBase)', validate parameter 'httpContext' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Attributes.Validations">
       <Types>
        <Type Name="MatchCurrentPasswordValidationAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'MatchCurrentPasswordValidationAttribute', if possible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MatchCurrentPasswordValidationAttribute.cs" Line="29">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'MatchCurrentPasswordValidationAttribute.IsValid(object, ValidationContext)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MatchCurrentPasswordValidationAttribute.cs" Line="34">In externally visible method 'MatchCurrentPasswordValidationAttribute.IsValid(object, ValidationContext)', validate parameter 'validationContext' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MustBeSelectListValidationAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'MustBeSelectListValidationAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'notAllowValue' of Attribute 'MustBeSelectListValidationAttribute'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'MustBeSelectListValidationAttribute'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MustBeSelectListValidationAttribute.cs" Line="32">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'MustBeSelectListValidationAttribute.IsValid(object, ValidationContext)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MustBeSelectListValidationAttribute.cs" Line="33">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'MustBeSelectListValidationAttribute.IsValid(object, ValidationContext)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MustBeStringAndDigitValidationAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'MustBeStringAndDigitValidationAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'MustBeStringAndDigitValidationAttribute'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MustBeStringAndDigitValidationAttribute.cs" Line="30">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'MustBeStringAndDigitValidationAttribute.IsValid(object, ValidationContext)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MustNotBeTheSameValidationAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'MustNotBeTheSameValidationAttribute', if possible.</Issue>
          </Message>
          <Message Id="BeThe" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'BeThe' in type name 'MustNotBeTheSameValidationAttribute' exists as a discrete term. If your usage is intended to be single word, case it as 'Bethe'.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'otherProperty' of Attribute 'MustNotBeTheSameValidationAttribute'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IsValid(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MustNotBeTheSameValidationAttribute.cs" Line="22">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'MustNotBeTheSameValidationAttribute.IsValid(object)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MustNotBeTheSameValidationAttribute.cs" Line="40">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'MustNotBeTheSameValidationAttribute.IsValid(object, ValidationContext)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MustNotBeTheSameValidationAttribute.cs" Line="41">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'MustNotBeTheSameValidationAttribute.IsValid(object, ValidationContext)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Attributes\Validations" File="MustNotBeTheSameValidationAttribute.cs" Line="39">In externally visible method 'MustNotBeTheSameValidationAttribute.IsValid(object, ValidationContext)', validate parameter 'validationContext' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RequiredIfNotDefaultValueAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'RequiredIfNotDefaultValueAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'defaultValue' of Attribute 'RequiredIfNotDefaultValueAttribute'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'RequiredIfNotDefaultValueAttribute'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Common.Models.Account">
       <Types>
        <Type Name="ViewLogin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'ViewLogin' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Common.Models.Message">
       <Types>
        <Type Name="ViewChatGPTRequest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="GPT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'GPT' in type name 'ViewChatGPTRequest' by changing it to 'Gpt'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ViewChatGPTResponse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="GPT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'GPT' in type name 'ViewChatGPTResponse' by changing it to 'Gpt'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Choices" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Models\Message" File="ViewChatGPTResponse.cs" Line="36">Change 'ViewChatGPTResponse.Choices' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewCreateMessage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReceiverID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Models\Message" File="ViewCreateMessage.cs" Line="12">Correct the casing of 'ID' in member name 'ViewCreateMessage.ReceiverID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SenderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Models\Message" File="ViewCreateMessage.cs" Line="10">Correct the casing of 'ID' in member name 'ViewCreateMessage.SenderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewEditMessage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MessageID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Models\Message" File="ViewEditMessage.cs" Line="10">Correct the casing of 'ID' in member name 'ViewEditMessage.MessageID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SenderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Models\Message" File="ViewEditMessage.cs" Line="12">Correct the casing of 'ID' in member name 'ViewEditMessage.SenderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewReadMessage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReceiverID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Models\Message" File="ViewReadMessage.cs" Line="12">Correct the casing of 'ID' in member name 'ViewReadMessage.ReceiverID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SenderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Models\Message" File="ViewReadMessage.cs" Line="10">Correct the casing of 'ID' in member name 'ViewReadMessage.SenderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Common.Repository.Account">
       <Types>
        <Type Name="AccountRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Login(BookingAds.Common.Models.Account.ViewLogin)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Account" File="AccountRepository.cs" Line="173">In externally visible method 'AccountRepository.Login(ViewLogin)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Register(BookingAds.Models.Register.ViewRegister)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Account" File="AccountRepository.cs" Line="217">In externally visible method 'AccountRepository.Register(ViewRegister)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateEmployee(BookingAds.Common.Models.Account.ViewUpdateEmployeeInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Account" File="AccountRepository.cs" Line="317">In externally visible method 'AccountRepository.UpdateEmployee(ViewUpdateEmployeeInfo)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateNewPassword(BookingAds.Common.Models.Account.ViewChangePassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Account" File="AccountRepository.cs" Line="367">In externally visible method 'AccountRepository.UpdateNewPassword(ViewChangePassword)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Common.Repository.Account.Abstractions">
       <Types>
        <Type Name="IAccountRepository" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Login(BookingAds.Common.Models.Account.ViewLogin)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IAccountRepository.Login(ViewLogin)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'IAccountRepository.Login(ViewLogin)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Register(BookingAds.Models.Register.ViewRegister)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IAccountRepository.Register(ViewRegister)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateEmployee(BookingAds.Common.Models.Account.ViewUpdateEmployeeInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IAccountRepository.UpdateEmployee(ViewUpdateEmployeeInfo)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateNewPassword(BookingAds.Common.Models.Account.ViewChangePassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IAccountRepository.UpdateNewPassword(ViewChangePassword)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Common.Repository.Employee">
       <Types>
        <Type Name="MessageRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateMessage(BookingAds.Common.Models.Message.ViewCreateMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Message" File="MessageRepository.cs" Line="40">In externally visible method 'MessageRepository.CreateMessage(ViewCreateMessage)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EditMessage(BookingAds.Common.Models.Message.ViewEditMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Message" File="MessageRepository.cs" Line="105">In externally visible method 'MessageRepository.EditMessage(ViewEditMessage)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMessages(System.String,System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Message" File="MessageRepository.cs" Line="188">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'MessageRepository.GetMessages(string, string, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadMessage(BookingAds.Common.Models.Message.ViewReadMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Common\Repository\Message" File="MessageRepository.cs" Line="239">In externally visible method 'MessageRepository.ReadMessage(ViewReadMessage)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Constants">
       <Types>
        <Type Name="AccountStatusConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LOCK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOCK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOCK' in member name 'AccountStatusConstant.LOCK' by changing it to 'Lock'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UNLOCK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UNLOCK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'UNLOCK' in member name 'AccountStatusConstant.UNLOCK' by changing it to 'Unlock'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConfigVnpayConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Vnpay" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Vnpay' in type name 'ConfigVnpayConstant'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Constants" File="ConfigVnpayConstant.cs" Line="20">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ConfigVnpayConstant.ConfigVnpayConstant()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDate" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ConfigVnpayConstant.CreateDate' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrCode" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Curr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Curr' in member name 'ConfigVnpayConstant.CurrCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HashSecret" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ConfigVnpayConstant.HashSecret' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IpAddr" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Addr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Addr' in member name 'ConfigVnpayConstant.IpAddr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ip' in member name 'ConfigVnpayConstant.IpAddr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ConfigVnpayConstant.IpAddr' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReturnUrl" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ConfigVnpayConstant.ReturnUrl' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Successed" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Successed" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Successed' in member name 'ConfigVnpayConstant.Successed' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TmnCode" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tmn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tmn' in member name 'ConfigVnpayConstant.TmnCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ConfigVnpayConstant.TmnCode' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Url" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ConfigVnpayConstant.Url' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Version" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'ConfigVnpayConstant.Version' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConstantsReturnMessengerAccount" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ErrorLogin" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'ConstantsReturnMessengerAccount.ErrorLogin' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConstantsReturnMessengerOrder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FaildCancelOrder" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Faild" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Faild' in member name 'ConstantsReturnMessengerOrder.FaildCancelOrder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DateConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AllowedFromDateTimeSql" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'DateConstant.AllowedFromDateTimeSql' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllowedToDateTimeSql" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'DateConstant.AllowedToDateTimeSql' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DateEnd" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'DateConstant.DateEnd' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DateStart" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'DateConstant.DateStart' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PayTypeConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CASH" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CASH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CASH' in member name 'PayTypeConstant.CASH' by changing it to 'Cash'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WALLET" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WALLET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'WALLET' in member name 'PayTypeConstant.WALLET' by changing it to 'Wallet'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RoleConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ADMIN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ADMIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ADMIN' in member name 'RoleConstant.ADMIN' by changing it to 'Admin'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EMPLOYEE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EMPLOYEE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EMPLOYEE' in member name 'RoleConstant.EMPLOYEE' by changing it to 'Employee'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GUEST" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GUEST" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GUEST' in member name 'RoleConstant.GUEST' by changing it to 'Guest'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SortTypeConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ASC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ASC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ASC' in member name 'SortTypeConstant.ASC' by changing it to 'Asc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'SortTypeConstant.DEFAULT' by changing it to 'Default'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DESC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DESC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DESC' in member name 'SortTypeConstant.DESC' by changing it to 'Desc'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UploadFileConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AllowedExtensions" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UploadFileConstant.AllowedExtensions' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RejectExtensions" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UploadFileConstant.RejectExtensions' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ValidatesConstant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DFCODE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DFCODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DFCODE' in member name 'ValidatesConstant.DFCODE' by changing it to 'Dfcode'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DIGIT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DIGIT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DIGIT' in member name 'ValidatesConstant.DIGIT' by changing it to 'Digit'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOWER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LOWER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOWER' in member name 'ValidatesConstant.LOWER' by changing it to 'Lower'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_AREATEXTBOX" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AREATEXTBOX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AREATEXTBOX' in member name 'ValidatesConstant.MAX_AREATEXTBOX' by changing it to 'Areatextbox'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'ValidatesConstant.MAX_AREATEXTBOX' by changing it to 'Max'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MAX_AREATEXTBOX'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_FIRSTNAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FIRSTNAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FIRSTNAME' in member name 'ValidatesConstant.MAX_FIRSTNAME' by changing it to 'Firstname'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'ValidatesConstant.MAX_FIRSTNAME' by changing it to 'Max'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MAX_FIRSTNAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_FOOD_NAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FOOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FOOD' in member name 'ValidatesConstant.MAX_FOOD_NAME' by changing it to 'Food'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'ValidatesConstant.MAX_FOOD_NAME' by changing it to 'Max'.</Issue>
            </Message>
            <Message Id="NAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NAME' in member name 'ValidatesConstant.MAX_FOOD_NAME' by changing it to 'Name'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MAX_FOOD_NAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_LASTNAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LASTNAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LASTNAME' in member name 'ValidatesConstant.MAX_LASTNAME' by changing it to 'Lastname'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'ValidatesConstant.MAX_LASTNAME' by changing it to 'Max'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MAX_LASTNAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_PASSWORD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'ValidatesConstant.MAX_PASSWORD' by changing it to 'Max'.</Issue>
            </Message>
            <Message Id="PASSWORD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PASSWORD' in member name 'ValidatesConstant.MAX_PASSWORD' by changing it to 'Password'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MAX_PASSWORD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_PRICE_FOOD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FOOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FOOD' in member name 'ValidatesConstant.MAX_PRICE_FOOD' by changing it to 'Food'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'ValidatesConstant.MAX_PRICE_FOOD' by changing it to 'Max'.</Issue>
            </Message>
            <Message Id="PRICE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PRICE' in member name 'ValidatesConstant.MAX_PRICE_FOOD' by changing it to 'Price'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MAX_PRICE_FOOD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MAX_QUANTITY_FOOD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FOOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FOOD' in member name 'ValidatesConstant.MAX_QUANTITY_FOOD' by changing it to 'Food'.</Issue>
            </Message>
            <Message Id="MAX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MAX' in member name 'ValidatesConstant.MAX_QUANTITY_FOOD' by changing it to 'Max'.</Issue>
            </Message>
            <Message Id="QUANTITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUANTITY' in member name 'ValidatesConstant.MAX_QUANTITY_FOOD' by changing it to 'Quantity'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MAX_QUANTITY_FOOD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_AREATEXTBOX" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AREATEXTBOX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AREATEXTBOX' in member name 'ValidatesConstant.MIN_AREATEXTBOX' by changing it to 'Areatextbox'.</Issue>
            </Message>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'ValidatesConstant.MIN_AREATEXTBOX' by changing it to 'Min'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MIN_AREATEXTBOX'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_FIRSTNAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FIRSTNAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FIRSTNAME' in member name 'ValidatesConstant.MIN_FIRSTNAME' by changing it to 'Firstname'.</Issue>
            </Message>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'ValidatesConstant.MIN_FIRSTNAME' by changing it to 'Min'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MIN_FIRSTNAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_FOOD_NAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FOOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FOOD' in member name 'ValidatesConstant.MIN_FOOD_NAME' by changing it to 'Food'.</Issue>
            </Message>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'ValidatesConstant.MIN_FOOD_NAME' by changing it to 'Min'.</Issue>
            </Message>
            <Message Id="NAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NAME' in member name 'ValidatesConstant.MIN_FOOD_NAME' by changing it to 'Name'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MIN_FOOD_NAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_LASTNAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LASTNAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LASTNAME' in member name 'ValidatesConstant.MIN_LASTNAME' by changing it to 'Lastname'.</Issue>
            </Message>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'ValidatesConstant.MIN_LASTNAME' by changing it to 'Min'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MIN_LASTNAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_PASSWORD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'ValidatesConstant.MIN_PASSWORD' by changing it to 'Min'.</Issue>
            </Message>
            <Message Id="PASSWORD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PASSWORD' in member name 'ValidatesConstant.MIN_PASSWORD' by changing it to 'Password'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MIN_PASSWORD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_PRICE_FOOD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FOOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FOOD' in member name 'ValidatesConstant.MIN_PRICE_FOOD' by changing it to 'Food'.</Issue>
            </Message>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'ValidatesConstant.MIN_PRICE_FOOD' by changing it to 'Min'.</Issue>
            </Message>
            <Message Id="PRICE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PRICE' in member name 'ValidatesConstant.MIN_PRICE_FOOD' by changing it to 'Price'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MIN_PRICE_FOOD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MIN_QUANTITY_FOOD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FOOD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FOOD' in member name 'ValidatesConstant.MIN_QUANTITY_FOOD' by changing it to 'Food'.</Issue>
            </Message>
            <Message Id="MIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIN' in member name 'ValidatesConstant.MIN_QUANTITY_FOOD' by changing it to 'Min'.</Issue>
            </Message>
            <Message Id="QUANTITY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUANTITY' in member name 'ValidatesConstant.MIN_QUANTITY_FOOD' by changing it to 'Quantity'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.MIN_QUANTITY_FOOD'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NOT_DIGIT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DIGIT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DIGIT' in member name 'ValidatesConstant.NOT_DIGIT' by changing it to 'Digit'.</Issue>
            </Message>
            <Message Id="NOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOT' in member name 'ValidatesConstant.NOT_DIGIT' by changing it to 'Not'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.NOT_DIGIT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OTHER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OTHER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OTHER' in member name 'ValidatesConstant.OTHER' by changing it to 'Other'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PHONE_LENGTH" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LENGTH" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LENGTH' in member name 'ValidatesConstant.PHONE_LENGTH' by changing it to 'Length'.</Issue>
            </Message>
            <Message Id="PHONE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PHONE' in member name 'ValidatesConstant.PHONE_LENGTH' by changing it to 'Phone'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ValidatesConstant.PHONE_LENGTH'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SPECIAL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SPECIAL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SPECIAL' in member name 'ValidatesConstant.SPECIAL' by changing it to 'Special'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UPPER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UPPER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'UPPER' in member name 'ValidatesConstant.UPPER' by changing it to 'Upper'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Controllers">
       <Types>
        <Type Name="AccountController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ChangePassword(BookingAds.Common.Models.Account.ViewChangePassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="134">In method 'AccountController.ChangePassword(ViewChangePassword)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="141">In externally visible method 'AccountController.ChangePassword(ViewChangePassword)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Login(BookingAds.Common.Models.Account.ViewLogin,System.Uri)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="79">In method 'AccountController.Login(ViewLogin, Uri)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="79">Replace the term 'Login' in member name 'AccountController.Login(ViewLogin, Uri)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="92">In externally visible method 'AccountController.Login(ViewLogin, Uri)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Login(System.Uri)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="60">Replace the term 'Login' in member name 'AccountController.Login(Uri)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Logout()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Logout" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="159">Replace the term 'Logout' in member name 'AccountController.Logout()' with the preferred alternate 'LogOff'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Update(BookingAds.Common.Models.Account.ViewUpdateEmployeeInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="193">In method 'AccountController.Update(ViewUpdateEmployeeInfo)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="194">In externally visible method 'AccountController.Update(ViewUpdateEmployeeInfo)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateAvatar(System.Web.HttpPostedFileBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="245">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'AccountController.UpdateAvatar(HttpPostedFileBase)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AccountController.cs" Line="253">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'AccountController.UpdateAvatar(HttpPostedFileBase)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AdsPageController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Create(System.Web.Mvc.FormCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="39">Modify 'AdsPageController.Create(FormCollection)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="collection" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="32">Parameter 'collection' of 'AdsPageController.Create(FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="69">Parameter 'id' of 'AdsPageController.Delete(int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int32,System.Web.Mvc.FormCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="83">Modify 'AdsPageController.Delete(int, FormCollection)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="collection" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="76">Parameter 'collection' of 'AdsPageController.Delete(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="76">Parameter 'id' of 'AdsPageController.Delete(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Details(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="19">Parameter 'id' of 'AdsPageController.Details(int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="47">Parameter 'id' of 'AdsPageController.Edit(int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(System.Int32,System.Web.Mvc.FormCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="61">Modify 'AdsPageController.Edit(int, FormCollection)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="collection" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="54">Parameter 'collection' of 'AdsPageController.Edit(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="AdsPageController.cs" Line="54">Parameter 'id' of 'AdsPageController.Edit(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ForgotPasswordController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ChangePassword(BookingAds.Models.ForgotPassword.ViewChangePassword,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="viewdata" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="272">In method 'ForgotPasswordController.ChangePassword(ViewChangePassword, string)', correct the spelling of 'viewdata' in parameter name 'viewdata' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="272">Parameter 'result' of 'ForgotPasswordController.ChangePassword(ViewChangePassword, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangePassword(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="229">In member 'ForgotPasswordController.ChangePassword(string, string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfirmCode(BookingAds.Models.ForgotPassword.ViewConfirmCode,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="viewdata" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="184">In method 'ForgotPasswordController.ConfirmCode(ViewConfirmCode, string, string)', correct the spelling of 'viewdata' in parameter name 'viewdata' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="184">Parameter 'result' of 'ForgotPasswordController.ConfirmCode(ViewConfirmCode, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfirmCode(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="151">In member 'ForgotPasswordController.ConfirmCode(string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
            <Message Id="username" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="151">Parameter 'username' of 'ForgotPasswordController.ConfirmCode(string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Index(BookingAds.Models.ForgotPassword.ViewForgotPassword,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="viewdata" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="80">In method 'ForgotPasswordController.Index(ViewForgotPassword, string, string)', correct the spelling of 'viewdata' in parameter name 'viewdata' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="genToken" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="123">'ForgotPasswordController.Index(ViewForgotPassword, string, string)' declares a variable, 'genToken', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="result" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="80">Parameter 'result' of 'ForgotPasswordController.Index(ViewForgotPassword, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMail(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="email" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ForgotPasswordController.cs" Line="334">'ForgotPasswordController.SendMail(string, string, string)' declares a variable, 'email', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HistoryOrderProductController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Canceled(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="180">Replace method 'HistoryOrderProductController.Canceled(long)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetailsMess(BookingAds.Models.HistoryOrderProduct.ViewDetailsMess,System.Collections.Generic.IEnumerable`1&lt;System.Web.HttpPostedFileBase&gt;,System.String,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="239">In member 'HistoryOrderProductController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="239">In method 'HistoryOrderProductController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="254">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'HistoryOrderProductController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="263">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HistoryOrderProductController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="281">In externally visible method 'HistoryOrderProductController.DetailsMess(ViewDetailsMess, IEnumerable&lt;HttpPostedFileBase&gt;, string, long)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetailsMess(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="214">In member 'HistoryOrderProductController.DetailsMess(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="129">Replace method 'HistoryOrderProductController.Edit(long, long)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Products(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="HistoryOrderProductController.cs" Line="118">Replace method 'HistoryOrderProductController.Products(string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InformationBookingAdsController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Filter(BookingAds.Models.InformationBookingAds.ViewFilterBookingAds)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="114">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'InformationBookingAdsController.Filter(ViewFilterBookingAds)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Index()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="87">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'InformationBookingAdsController.Index()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Recharge(BookingAds.Models.InformationBookingAds.ViewRecharge)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="216">In method 'InformationBookingAdsController.Recharge(ViewRecharge)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="234">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'InformationBookingAdsController.Recharge(ViewRecharge)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="224">In externally visible method 'InformationBookingAdsController.Recharge(ViewRecharge)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReturnVnpay()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Vnpay" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="255">Correct the spelling of 'Vnpay' in member name 'InformationBookingAdsController.ReturnVnpay()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="response" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="279">'InformationBookingAdsController.ReturnVnpay()' declares a variable, 'response', of type '&lt;Anonymous Type&gt;', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt64(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="267">Because the behavior of 'Convert.ToInt64(string)' could vary based on the current user's locale settings, replace this call in 'InformationBookingAdsController.ReturnVnpay()' with a call to 'Convert.ToInt64(string, IFormatProvider)'. If the result of 'Convert.ToInt64(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="InformationBookingAdsController.cs" Line="272">Because the behavior of 'Convert.ToInt64(string)' could vary based on the current user's locale settings, replace this call in 'InformationBookingAdsController.ReturnVnpay()' with a call to 'Convert.ToInt64(string, IFormatProvider)'. If the result of 'Convert.ToInt64(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MessengerController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Chat(BookingAds.Common.Models.Message.ViewCreateMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="MessengerController.cs" Line="76">In method 'MessengerController.Chat(ViewCreateMessage)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="MessengerController.cs" Line="98">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MessengerController.Chat(ViewCreateMessage)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChatHistory(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="MessengerController.cs" Line="56">Replace method 'MessengerController.ChatHistory(string, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(BookingAds.Common.Models.Message.ViewReadMessage)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="MessengerController.cs" Line="123">In method 'MessengerController.Read(ViewReadMessage)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProductAdsController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Details(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ProductAdsController.cs" Line="33">In method 'ProductAdsController.Details(string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="s" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ProductAdsController.cs" Line="33">Parameter 's' of 'ProductAdsController.Details(string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Index(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ProductAdsController.cs" Line="20">In method 'ProductAdsController.Index(string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="s" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="ProductAdsController.cs" Line="20">Parameter 's' of 'ProductAdsController.Index(string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RegisterController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Index(BookingAds.Models.Register.ViewRegister)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="RegisterController.cs" Line="49">In method 'RegisterController.Index(ViewRegister)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SupportController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_acountRepository" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SupportController._acountRepository' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Create(BookingAds.Models.Supports.ViewCreate,System.Web.HttpPostedFileBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="258">In method 'SupportController.Create(ViewCreate, HttpPostedFileBase)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="299">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SupportController.Create(ViewCreate, HttpPostedFileBase)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="308">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SupportController.Create(ViewCreate, HttpPostedFileBase)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="266">In externally visible method 'SupportController.Create(ViewCreate, HttpPostedFileBase)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="369">Parameter 'id' of 'SupportController.Delete(int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int32,System.Web.Mvc.FormCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="383">Modify 'SupportController.Delete(int, FormCollection)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="collection" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="376">Parameter 'collection' of 'SupportController.Delete(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="376">Parameter 'id' of 'SupportController.Delete(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Details(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="127">In member 'SupportController.Details(long)', correct the casing of 'ID' in parameter name 'supportsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="347">Parameter 'id' of 'SupportController.Edit(int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(System.Int32,System.Web.Mvc.FormCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="361">Modify 'SupportController.Edit(int, FormCollection)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="collection" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="354">Parameter 'collection' of 'SupportController.Edit(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="id" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="354">Parameter 'id' of 'SupportController.Edit(int, FormCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Request_for_feedback()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="feedback" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="236">Correct the casing of 'feedback' in member name 'SupportController.Request_for_feedback()' by changing it to 'Feedback'.</Issue>
            </Message>
            <Message Id="for" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="236">Correct the casing of 'for' in member name 'SupportController.Request_for_feedback()' by changing it to 'For'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="236">Remove the underscores from member name 'SupportController.Request_for_feedback()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save(BookingAds.Models.Supports.ViewDetails,System.Web.HttpPostedFileBase)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="159">In method 'SupportController.Save(ViewDetails, HttpPostedFileBase)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="186">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SupportController.Save(ViewDetails, HttpPostedFileBase)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="195">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SupportController.Save(ViewDetails, HttpPostedFileBase)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Controllers" File="SupportController.cs" Line="166">In externally visible method 'SupportController.Save(ViewDetails, HttpPostedFileBase)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Entities">
       <Types>
        <Type Name="Account" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Account' conflicts in whole or in part with the namespace name 'BookingAds.Common.Models.Account'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Admin" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Admin' conflicts in whole or in part with the namespace name 'BookingAds.Areas.Admin'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CatelogProduct" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Catelog' in type name 'CatelogProduct'.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'CatelogProduct' conflicts in whole or in part with the namespace name 'BookingAds.Areas.Admin.Repository.CatelogProduct'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CatelogName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="CatelogProduct.cs" Line="12">Correct the spelling of 'Catelog' in member name 'CatelogProduct.CatelogName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CatelogProductsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="CatelogProduct.cs" Line="10">Correct the casing of 'ID' in member name 'CatelogProduct.CatelogProductsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="CatelogProduct.cs" Line="10">Correct the spelling of 'Catelog' in member name 'CatelogProduct.CatelogProductsID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Content" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ContentID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Content.cs" Line="10">Correct the casing of 'ID' in member name 'Content.ContentID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Employee" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Employee' conflicts in whole or in part with the namespace name 'BookingAds.Areas.Admin.Repository.Employee'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EmployeeID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Employee.cs" Line="10">Correct the casing of 'ID' in member name 'Employee.EmployeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Image" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ImageID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Image.cs" Line="10">Correct the casing of 'ID' in member name 'Image.ImageID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Image.cs" Line="11">Correct the casing of 'ID' in member name 'Image.MessageID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Message" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Message' conflicts in whole or in part with the namespace name 'BookingAds.Common.Models.Message'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MessageID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Message.cs" Line="20">Correct the casing of 'ID' in member name 'Message.MessageID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReceiverID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Message.cs" Line="12">Correct the casing of 'ID' in member name 'Message.ReceiverID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SenderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Message.cs" Line="10">Correct the casing of 'ID' in member name 'Message.SenderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MessTest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Images" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="MessTest.cs" Line="13">Change 'MessTest.Images' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="MessTest.cs" Line="10">Correct the casing of 'ID' in member name 'MessTest.MessageID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OderDetailMess" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OderDetailMessID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OderDetailMess.cs" Line="22">Correct the casing of 'ID' in member name 'OderDetailMess.OderDetailMessID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OderDetailMess.cs" Line="20">Correct the casing of 'ID' in member name 'OderDetailMess.OrderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReceiverID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OderDetailMess.cs" Line="12">Correct the casing of 'ID' in member name 'OderDetailMess.ReceiverID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SenderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OderDetailMess.cs" Line="10">Correct the casing of 'ID' in member name 'OderDetailMess.SenderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Order" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Order' conflicts in whole or in part with the namespace name 'BookingAds.Areas.Admin.Repository.Order'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CatelogProduct" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Order.cs" Line="16">Correct the spelling of 'Catelog' in member name 'Order.CatelogProduct' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Order.cs" Line="10">Correct the casing of 'ID' in member name 'Order.OrderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Textlink" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Textlink" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Order.cs" Line="22">Correct the spelling of 'Textlink' in member name 'Order.Textlink' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Order.cs" Line="24">The property name 'Order.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OrderStatus" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="BookingAds.Entities.StatusType.#ctor(System.Int32,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Method 'OrderStatus.OrderStatus()' passes a literal string as parameter 'message' of a call to 'StatusType.StatusType(int, string)'. Retrieve the following string(s) from a resource table instead: "Không được thanh toán. Đơn hàng đã đặt thất bại".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Method 'OrderStatus.OrderStatus()' passes a literal string as parameter 'message' of a call to 'StatusType.StatusType(int, string)'. Retrieve the following string(s) from a resource table instead: "Sản phẩm đang trong quá trình hoàn thânh".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="16">Method 'OrderStatus.OrderStatus()' passes a literal string as parameter 'message' of a call to 'StatusType.StatusType(int, string)'. Retrieve the following string(s) from a resource table instead: "Đang xử lý".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="18">Method 'OrderStatus.OrderStatus()' passes a literal string as parameter 'message' of a call to 'StatusType.StatusType(int, string)'. Retrieve the following string(s) from a resource table instead: "Đã duyệt đơn. Chờ hoàn thành".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="22">Method 'OrderStatus.OrderStatus()' passes a literal string as parameter 'message' of a call to 'StatusType.StatusType(int, string)'. Retrieve the following string(s) from a resource table instead: "Đã hoàn thành dự án".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="12">Method 'OrderStatus.OrderStatus()' passes a literal string as parameter 'message' of a call to 'StatusType.StatusType(int, string)'. Retrieve the following string(s) from a resource table instead: "Đơn hàng bị hủy".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="14">Method 'OrderStatus.OrderStatus()' passes a literal string as parameter 'message' of a call to 'StatusType.StatusType(int, string)'. Retrieve the following string(s) from a resource table instead: "Đơn hàng bị từ chối".</Issue>
            </Message>
            <Message Id="Chờ" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="18">Correct the spelling of the unrecognized token 'Chờ' in the literal '"Đã duyệt đơn. Chờ hoàn thành"'.</Issue>
            </Message>
            <Message Id="Không" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'Không' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
            <Message Id="Sản" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'Sản' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
            </Message>
            <Message Id="bại" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'bại' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
            <Message Id="bị" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="12">Correct the spelling of the unrecognized token 'bị' in the literal '"Đơn hàng bị hủy"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="14">Correct the spelling of the unrecognized token 'bị' in the literal '"Đơn hàng bị từ chối"'.</Issue>
            </Message>
            <Message Id="chối" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="14">Correct the spelling of the unrecognized token 'chối' in the literal '"Đơn hàng bị từ chối"'.</Issue>
            </Message>
            <Message Id="duyệt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="18">Correct the spelling of the unrecognized token 'duyệt' in the literal '"Đã duyệt đơn. Chờ hoàn thành"'.</Issue>
            </Message>
            <Message Id="dự" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="22">Correct the spelling of the unrecognized token 'dự' in the literal '"Đã hoàn thành dự án"'.</Issue>
            </Message>
            <Message Id="hoàn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'hoàn' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="18">Correct the spelling of the unrecognized token 'hoàn' in the literal '"Đã duyệt đơn. Chờ hoàn thành"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="22">Correct the spelling of the unrecognized token 'hoàn' in the literal '"Đã hoàn thành dự án"'.</Issue>
            </Message>
            <Message Id="hàng" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'hàng' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="12">Correct the spelling of the unrecognized token 'hàng' in the literal '"Đơn hàng bị hủy"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="14">Correct the spelling of the unrecognized token 'hàng' in the literal '"Đơn hàng bị từ chối"'.</Issue>
            </Message>
            <Message Id="hủy" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="12">Correct the spelling of the unrecognized token 'hủy' in the literal '"Đơn hàng bị hủy"'.</Issue>
            </Message>
            <Message Id="lý" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="16">Correct the spelling of the unrecognized token 'lý' in the literal '"Đang xử lý"'.</Issue>
            </Message>
            <Message Id="phẩm" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'phẩm' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
            </Message>
            <Message Id="quá" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'quá' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
            </Message>
            <Message Id="thanh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'thanh' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
            <Message Id="thành" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="18">Correct the spelling of the unrecognized token 'thành' in the literal '"Đã duyệt đơn. Chờ hoàn thành"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="22">Correct the spelling of the unrecognized token 'thành' in the literal '"Đã hoàn thành dự án"'.</Issue>
            </Message>
            <Message Id="thânh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'thânh' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
            </Message>
            <Message Id="thất" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'thất' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
            <Message Id="toán" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'toán' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
            <Message Id="trong" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'trong' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
            </Message>
            <Message Id="trình" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'trình' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
            </Message>
            <Message Id="từ" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="14">Correct the spelling of the unrecognized token 'từ' in the literal '"Đơn hàng bị từ chối"'.</Issue>
            </Message>
            <Message Id="xử" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="16">Correct the spelling of the unrecognized token 'xử' in the literal '"Đang xử lý"'.</Issue>
            </Message>
            <Message Id="án" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="22">Correct the spelling of the unrecognized token 'án' in the literal '"Đã hoàn thành dự án"'.</Issue>
            </Message>
            <Message Id="Đang" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="16">Correct the spelling of the unrecognized token 'Đang' in the literal '"Đang xử lý"'.</Issue>
            </Message>
            <Message Id="Đã" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="18">Correct the spelling of the unrecognized token 'Đã' in the literal '"Đã duyệt đơn. Chờ hoàn thành"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="22">Correct the spelling of the unrecognized token 'Đã' in the literal '"Đã hoàn thành dự án"'.</Issue>
            </Message>
            <Message Id="Đơn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'Đơn' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="12">Correct the spelling of the unrecognized token 'Đơn' in the literal '"Đơn hàng bị hủy"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="14">Correct the spelling of the unrecognized token 'Đơn' in the literal '"Đơn hàng bị từ chối"'.</Issue>
            </Message>
            <Message Id="đang" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="20">Correct the spelling of the unrecognized token 'đang' in the literal '"Sản phẩm đang trong quá trình hoàn thânh"'.</Issue>
            </Message>
            <Message Id="đã" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'đã' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
            <Message Id="đơn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="18">Correct the spelling of the unrecognized token 'đơn' in the literal '"Đã duyệt đơn. Chờ hoàn thành"'.</Issue>
            </Message>
            <Message Id="được" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'được' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
            <Message Id="đặt" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="OrderStatus.cs" Line="24">Correct the spelling of the unrecognized token 'đặt' in the literal '"Không được thanh toán. Đơn hàng đã đặt thất bại"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CANCELED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'OrderStatus.CANCELED' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'OrderStatus.DEFAULT' by changing it to 'Default'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FAILED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'OrderStatus.FAILED' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PAYING" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'OrderStatus.PAYING' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PENDING" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'OrderStatus.PENDING' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REJECTED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'OrderStatus.REJECTED' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SUCCESSED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'OrderStatus.SUCCESSED' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WAITING" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'OrderStatus.WAITING' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Product" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Product' conflicts in whole or in part with the namespace name 'BookingAds.Areas.Admin.Repository.Product'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CatelogProduct" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Product.cs" Line="20">Correct the spelling of 'Catelog' in member name 'Product.CatelogProduct' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProductID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Product.cs" Line="10">Correct the casing of 'ID' in member name 'Product.ProductID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProductAttributes" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AttributeID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="ProductAttributes.cs" Line="10">Correct the casing of 'ID' in member name 'ProductAttributes.AttributeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProductDescription" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DescriptionID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="ProductDescription.cs" Line="10">Correct the casing of 'ID' in member name 'ProductDescription.DescriptionID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Supports" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Supports' conflicts in whole or in part with the namespace name 'BookingAds.Areas.Admin.Models.Supports'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CatelogProduct" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Supports.cs" Line="28">Correct the spelling of 'Catelog' in member name 'Supports.CatelogProduct' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubjectMesseger" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Messeger" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Supports.cs" Line="16">Correct the spelling of 'Messeger' in member name 'Supports.SubjectMesseger' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SupportsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="Supports.cs" Line="10">Correct the casing of 'ID' in member name 'Supports.SupportsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SupportsDetails" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Messeger" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Messeger" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsDetails.cs" Line="16">Correct the spelling of 'Messeger' in member name 'SupportsDetails.Messeger' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReceiverID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsDetails.cs" Line="10">Correct the casing of 'ID' in member name 'SupportsDetails.ReceiverID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SenderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsDetails.cs" Line="12">Correct the casing of 'ID' in member name 'SupportsDetails.SenderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SupportsStatus" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="BookingAds.Entities.SupportsType.#ctor(System.Int32,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="14">Method 'SupportsStatus.SupportsStatus()' passes a literal string as parameter 'message' of a call to 'SupportsType.SupportsType(int, string)'. Retrieve the following string(s) from a resource table instead: "Yêu Cầu Đã Có Phản Hồi".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="12">Method 'SupportsStatus.SupportsStatus()' passes a literal string as parameter 'message' of a call to 'SupportsType.SupportsType(int, string)'. Retrieve the following string(s) from a resource table instead: "Yêu Cầu Đã Gửi".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="16">Method 'SupportsStatus.SupportsStatus()' passes a literal string as parameter 'message' of a call to 'SupportsType.SupportsType(int, string)'. Retrieve the following string(s) from a resource table instead: "Yêu Cầu Đã Hoàn Thành".</Issue>
            </Message>
            <Message Id="Có" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="14">Correct the spelling of the unrecognized token 'Có' in the literal '"Yêu Cầu Đã Có Phản Hồi"'.</Issue>
            </Message>
            <Message Id="Cầu" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="14">Correct the spelling of the unrecognized token 'Cầu' in the literal '"Yêu Cầu Đã Có Phản Hồi"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="12">Correct the spelling of the unrecognized token 'Cầu' in the literal '"Yêu Cầu Đã Gửi"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="16">Correct the spelling of the unrecognized token 'Cầu' in the literal '"Yêu Cầu Đã Hoàn Thành"'.</Issue>
            </Message>
            <Message Id="Gửi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="12">Correct the spelling of the unrecognized token 'Gửi' in the literal '"Yêu Cầu Đã Gửi"'.</Issue>
            </Message>
            <Message Id="Hoàn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="16">Correct the spelling of the unrecognized token 'Hoàn' in the literal '"Yêu Cầu Đã Hoàn Thành"'.</Issue>
            </Message>
            <Message Id="Hồi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="14">Correct the spelling of the unrecognized token 'Hồi' in the literal '"Yêu Cầu Đã Có Phản Hồi"'.</Issue>
            </Message>
            <Message Id="Phản" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="14">Correct the spelling of the unrecognized token 'Phản' in the literal '"Yêu Cầu Đã Có Phản Hồi"'.</Issue>
            </Message>
            <Message Id="Thành" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="16">Correct the spelling of the unrecognized token 'Thành' in the literal '"Yêu Cầu Đã Hoàn Thành"'.</Issue>
            </Message>
            <Message Id="Yêu" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="14">Correct the spelling of the unrecognized token 'Yêu' in the literal '"Yêu Cầu Đã Có Phản Hồi"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="12">Correct the spelling of the unrecognized token 'Yêu' in the literal '"Yêu Cầu Đã Gửi"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="16">Correct the spelling of the unrecognized token 'Yêu' in the literal '"Yêu Cầu Đã Hoàn Thành"'.</Issue>
            </Message>
            <Message Id="Đã" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="14">Correct the spelling of the unrecognized token 'Đã' in the literal '"Yêu Cầu Đã Có Phản Hồi"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="12">Correct the spelling of the unrecognized token 'Đã' in the literal '"Yêu Cầu Đã Gửi"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Entities" File="SupportsStatus.cs" Line="16">Correct the spelling of the unrecognized token 'Đã' in the literal '"Yêu Cầu Đã Hoàn Thành"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEFAULT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEFAULT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEFAULT' in member name 'SupportsStatus.DEFAULT' by changing it to 'Default'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestDone" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'SupportsStatus.RequestDone' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestForFeedback" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'SupportsStatus.RequestForFeedback' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestSend" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'SupportsStatus.RequestSend' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Hubs">
       <Types>
        <Type Name="ChatHub" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReadMessagePrivate(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Hubs" File="ChatHub.cs" Line="64">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ChatHub.ReadMessagePrivate(string, string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Send(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Hubs" File="ChatHub.cs" Line="33">In method 'ChatHub.Send(string)', correct the spelling of 'msg' in parameter name 'msg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendPrivate(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Hubs" File="ChatHub.cs" Line="45">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ChatHub.SendPrivate(string, string, string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserNameProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetUserId(Microsoft.AspNet.SignalR.IRequest)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Hubs" File="UserNameProvider.cs" Line="14">In externally visible method 'UserNameProvider.GetUserId(IRequest)', validate parameter 'request' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Models.ForgotPassword">
       <Types>
        <Type Name="ViewChangePassword" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Username" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\ForgotPassword" File="ViewChangePassword.cs" Line="16">The discrete term 'Username' in member name 'ViewChangePassword.Username' should be expressed as a compound word, 'UserName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewConfirmCode" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Username" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\ForgotPassword" File="ViewConfirmCode.cs" Line="16">The discrete term 'Username' in member name 'ViewConfirmCode.Username' should be expressed as a compound word, 'UserName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewForgotPassword" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Username" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\ForgotPassword" File="ViewForgotPassword.cs" Line="17">The discrete term 'Username' in member name 'ViewForgotPassword.Username' should be expressed as a compound word, 'UserName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Models.InformationBookingAds">
       <Types>
        <Type Name="ViewFilterBookingAds" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CatelogProductsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\InformationBookingAds" File="ViewFilterBookingAds.cs" Line="15">Correct the casing of 'ID' in member name 'ViewFilterBookingAds.CatelogProductsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\InformationBookingAds" File="ViewFilterBookingAds.cs" Line="15">Correct the spelling of 'Catelog' in member name 'ViewFilterBookingAds.CatelogProductsID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ViewIndex" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CatelogProductsID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\InformationBookingAds" File="ViewIndex.cs" Line="22">Correct the casing of 'ID' in member name 'ViewIndex.CatelogProductsID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\InformationBookingAds" File="ViewIndex.cs" Line="22">Correct the spelling of 'Catelog' in member name 'ViewIndex.CatelogProductsID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Models.Supports">
       <Types>
        <Type Name="ViewCreate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CatelogProduct" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\Supports" File="ViewCreate.cs" Line="15">Correct the spelling of 'Catelog' in member name 'ViewCreate.CatelogProduct' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\Supports" File="ViewCreate.cs" Line="34">Correct the casing of 'ID' in member name 'ViewCreate.OderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubjectMessener" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Messener" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Models\Supports" File="ViewCreate.cs" Line="29">Correct the spelling of 'Messener' in member name 'ViewCreate.SubjectMessener' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Modules">
       <Types>
        <Type Name="ConvertUtils`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'ConvertUtils&lt;T&gt;'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Deserialize(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ConvertUtils.cs" Line="63">Remove 'ConvertUtils&lt;T&gt;.Deserialize(string)' from 'ConvertUtils&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveSign4VietnameseString(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ConvertUtils.cs" Line="74">Remove 'ConvertUtils&lt;T&gt;.RemoveSign4VietnameseString(string)' from 'ConvertUtils&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ConvertUtils.cs" Line="74">In method 'ConvertUtils&lt;T&gt;.RemoveSign4VietnameseString(string)', correct the spelling of 'str' in parameter name 'str' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Serialize(!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ConvertUtils.cs" Line="52">Remove 'ConvertUtils&lt;T&gt;.Serialize(T)' from 'ConvertUtils&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DateTimeUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'DateTimeUtils'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ConvertToDateTimeSQL(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="29">Replace method 'DateTimeUtils.ConvertToDateTimeSQL(string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="34">Modify 'DateTimeUtils.ConvertToDateTimeSQL(string, string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="29">Correct the casing of 'SQL' in member name 'DateTimeUtils.ConvertToDateTimeSQL(string, string)' by changing it to 'Sql'.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="29">In member 'DateTimeUtils.ConvertToDateTimeSQL(string, string)', consider replacing the data type identifier 'String' in parameter name 'dateTimeString' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToExposeTime(System.DateTime,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="19">Replace method 'DateTimeUtils.ConvertToExposeTime(this DateTime, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="25">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'DateTimeUtils.ConvertToExposeTime(this DateTime, string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidDateTimeSQL(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SQL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="41">Correct the casing of 'SQL' in member name 'DateTimeUtils.IsValidDateTimeSQL(string)' by changing it to 'Sql'.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="DateTimeUtils.cs" Line="41">In member 'DateTimeUtils.IsValidDateTimeSQL(string)', consider replacing the data type identifier 'String' in parameter name 'dateTimeString' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExtralNumberUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Extral" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Extral' in type name 'ExtralNumberUtils'.</Issue>
          </Message>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'ExtralNumberUtils'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ConvertNumbersToWords(System.Int32[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ExtralNumberUtils.cs" Line="26">In externally visible method 'ExtralNumberUtils.ConvertNumbersToWords(int[])', validate parameter 'numbers' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertStringToNumbers(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ExtralNumberUtils.cs" Line="11">In member 'ExtralNumberUtils.ConvertStringToNumbers(string)', consider replacing the data type identifier 'String' in parameter name 'numberString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ExtralNumberUtils.cs" Line="17">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ExtralNumberUtils.ConvertStringToNumbers(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="ExtralNumberUtils.cs" Line="13">In externally visible method 'ExtralNumberUtils.ConvertStringToNumbers(string)', validate parameter 'numberString' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GenTokenUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'GenTokenUtils'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GenerateToken(System.Nullable`1&lt;System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="tokenDB" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="GenTokenUtils.cs" Line="19">'GenTokenUtils.GenerateToken(int?)' declares a variable, 'tokenDB', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ModelUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'ModelUtils'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PasswordUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'PasswordUtils'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MD5(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="PasswordUtils.cs" Line="17">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'PasswordUtils.MD5(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SelectListHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'SelectListHelper' conflicts in whole or in part with the namespace name 'BookingAds.Repository.SelectListHelper'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ListService(System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Web.Mvc.SelectListItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="28">Method 'SelectListHelper.ListService(long)' passes a literal string as parameter 'value' of a call to 'SelectListItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " ,  ( ,  ) | ,   ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="20">Method 'SelectListHelper.ListService(long)' passes a literal string as parameter 'value' of a call to 'SelectListItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-- Chọn loại dịch vụ --".</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="18">Change 'List&lt;SelectListItem&gt;' in 'SelectListHelper.ListService(long)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Chọn" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="20">Correct the spelling of the unrecognized token 'Chọn' in the literal '"-- Chọn loại dịch vụ --"'.</Issue>
            </Message>
            <Message Id="dịch" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="20">Correct the spelling of the unrecognized token 'dịch' in the literal '"-- Chọn loại dịch vụ --"'.</Issue>
            </Message>
            <Message Id="loại" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="20">Correct the spelling of the unrecognized token 'loại' in the literal '"-- Chọn loại dịch vụ --"'.</Issue>
            </Message>
            <Message Id="vụ" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="20">Correct the spelling of the unrecognized token 'vụ' in the literal '"-- Chọn loại dịch vụ --"'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="28">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'SelectListHelper.ListService(long)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListHelper.cs" Line="28">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'SelectListHelper.ListService(long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SelectListUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'SelectListUtils'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetCatelogProducts()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Web.Mvc.SelectListItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListUtils.cs" Line="17">Method 'SelectListUtils.GetCatelogProducts()' passes a literal string as parameter 'value' of a call to 'SelectListItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "-- Loại quảng cáo --".</Issue>
            </Message>
            <Message Id="Catelog" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListUtils.cs" Line="13">Correct the spelling of 'Catelog' in member name 'SelectListUtils.GetCatelogProducts()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Loại" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListUtils.cs" Line="17">Correct the spelling of the unrecognized token 'Loại' in the literal '"-- Loại quảng cáo --"'.</Issue>
            </Message>
            <Message Id="cáo" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListUtils.cs" Line="17">Correct the spelling of the unrecognized token 'cáo' in the literal '"-- Loại quảng cáo --"'.</Issue>
            </Message>
            <Message Id="quảng" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListUtils.cs" Line="17">Correct the spelling of the unrecognized token 'quảng' in the literal '"-- Loại quảng cáo --"'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListUtils.cs" Line="27">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'SelectListUtils.GetCatelogProducts()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SelectListUtils.cs" Line="13">Change 'SelectListUtils.GetCatelogProducts()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SendMailUtils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'SendMailUtils'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SendMail(System.String,System.Uri,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mailTo" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SendMailUtils.cs" Line="13">In member 'SendMailUtils.SendMail(string, Uri, string)', the compound word 'mailTo' in parameter name 'mailTo' exists as a discrete term. If your usage is intended to be single word, case it as 'mailto' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="authen" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SendMailUtils.cs" Line="13">In method 'SendMailUtils.SendMail(string, Uri, string)', correct the spelling of 'authen' in parameter name 'authenCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Modules" File="SendMailUtils.cs" Line="14">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SendMailUtils.SendMail(string, Uri, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.ForgotPassword">
       <Types>
        <Type Name="ForgotPasswordRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ChangePassWord(BookingAds.Models.ForgotPassword.ViewChangePassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\ForgotPassword" File="ForgotPasswordRepository.cs" Line="84">In externally visible method 'ForgotPasswordRepository.ChangePassWord(ViewChangePassword)', validate parameter 'data' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckConfirmCode(BookingAds.Models.ForgotPassword.ViewConfirmCode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\ForgotPassword" File="ForgotPasswordRepository.cs" Line="121">In externally visible method 'ForgotPasswordRepository.CheckConfirmCode(ViewConfirmCode)', validate parameter 'data' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckTimeToken(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dateNow" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\ForgotPassword" File="ForgotPasswordRepository.cs" Line="144">'ForgotPasswordRepository.CheckTimeToken(string, string)' declares a variable, 'dateNow', of type 'DateTime', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\ForgotPassword" File="ForgotPasswordRepository.cs" Line="147">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ForgotPasswordRepository.CheckTimeToken(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteToken(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\ForgotPassword" File="ForgotPasswordRepository.cs" Line="383">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ForgotPasswordRepository.DeleteToken(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCode(BookingAds.Models.ForgotPassword.ViewForgotPassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\ForgotPassword" File="ForgotPasswordRepository.cs" Line="280">In externally visible method 'ForgotPasswordRepository.GetCode(ViewForgotPassword)', validate parameter 'data' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIdEmployee(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\ForgotPassword" File="ForgotPasswordRepository.cs" Line="412">The 'this' parameter (or 'Me' in Visual Basic) of 'ForgotPasswordRepository.GetIdEmployee(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.ForgotPassword.Abstractions">
       <Types>
        <Type Name="IForgotPasswordRepository" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ChangePassWord(BookingAds.Models.ForgotPassword.ViewChangePassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PassWord" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PassWord' in member name 'IForgotPasswordRepository.ChangePassWord(ViewChangePassword)' exists as a discrete term. If your usage is intended to be single word, case it as 'Password' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckTimeToken(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error">In member 'IForgotPasswordRepository.CheckTimeToken(string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckToken(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error">In member 'IForgotPasswordRepository.CheckToken(string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckUserName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error">In member 'IForgotPasswordRepository.CheckUserName(string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateToken(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error">In member 'IForgotPasswordRepository.CreateToken(string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteToken(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error">In member 'IForgotPasswordRepository.DeleteToken(string, string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetToken(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error">In member 'IForgotPasswordRepository.GetToken(string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsPassWord(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PassWord" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PassWord' in member name 'IForgotPasswordRepository.IsPassWord(string)' exists as a discrete term. If your usage is intended to be single word, case it as 'Password' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error">In member 'IForgotPasswordRepository.IsPassWord(string)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.HistoryOrderProduct">
       <Types>
        <Type Name="HistoryOrderProductRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Cancel(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="213">Method 'HistoryOrderProductRepository.Cancel(long)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "An error occurred: ".</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="184">In member 'HistoryOrderProductRepository.Cancel(long)', change parameter name 'orderId' to 'orderID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.Cancel(long)'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="196">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HistoryOrderProductRepository.Cancel(long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Count(BookingAds.Models.HistoryOrderProduct.ViewFilterHistory,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="107">In member 'HistoryOrderProductRepository.Count(ViewFilterHistory, long)', change parameter name 'employeeId' to 'employeeID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.Count(ViewFilterHistory, long)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="117">In externally visible method 'HistoryOrderProductRepository.Count(ViewFilterHistory, long)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDetailMess(BookingAds.Models.HistoryOrderProduct.ViewDetailsMess,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="498">Method 'HistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="496">Modify 'HistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="431">In member 'HistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)', change parameter name 'customerId' to 'employeeID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)'.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="480">'HistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)' declares a variable, 'i', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="498">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="452">In externally visible method 'HistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EditOrder(System.Int64,System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="175">Method 'HistoryOrderProductRepository.EditOrder(long, long, long)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "An error occurred: ".</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="141">In member 'HistoryOrderProductRepository.EditOrder(long, long, long)', change parameter name 'employeeId' to 'employeeID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.EditOrder(long, long, long)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="141">In member 'HistoryOrderProductRepository.EditOrder(long, long, long)', change parameter name 'productId' to 'productID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.EditOrder(long, long, long)'.</Issue>
            </Message>
            <Message Id="2#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="141">In member 'HistoryOrderProductRepository.EditOrder(long, long, long)', change parameter name 'orderId' to 'orderID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.EditOrder(long, long, long)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrder(System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="335">In member 'HistoryOrderProductRepository.GetOrder(long, long)', change parameter name 'orderID' to 'oderID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.GetOrder(long, long)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadHistoryOrderProduct(BookingAds.Models.HistoryOrderProduct.ViewFilterHistory,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="23">In member 'HistoryOrderProductRepository.LoadHistoryOrderProduct(ViewFilterHistory, long)', change parameter name 'employeeId' to 'employeeID' in order to match the identifier as it has been declared in 'IHistoryOrderProductRepository.LoadHistoryOrderProduct(ViewFilterHistory, long)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\HistoryOrderProduct" File="HistoryOrderProductRepository.cs" Line="52">In externally visible method 'HistoryOrderProductRepository.LoadHistoryOrderProduct(ViewFilterHistory, long)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.HistoryOrderProduct.Abstractions">
       <Types>
        <Type Name="IHistoryOrderProductRepository" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Cancel(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.Cancel(long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Count(BookingAds.Models.HistoryOrderProduct.ViewFilterHistory,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.Count(ViewFilterHistory, long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDetailMess(BookingAds.Models.HistoryOrderProduct.ViewDetailsMess,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IHistoryOrderProductRepository.CreateDetailMess(ViewDetailsMess, long)', correct the spelling of 'Dto' in parameter name 'dataDto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EditOrder(System.Int64,System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.EditOrder(long, long, long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.EditOrder(long, long, long)', correct the casing of 'ID' in parameter name 'orderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.EditOrder(long, long, long)', correct the casing of 'ID' in parameter name 'productID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrder(System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.GetOrder(long, long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.GetOrder(long, long)', correct the casing of 'ID' in parameter name 'oderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadDetailMess(System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.LoadDetailMess(long, long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.LoadDetailMess(long, long)', correct the casing of 'ID' in parameter name 'oderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadHistoryOrderProduct(BookingAds.Models.HistoryOrderProduct.ViewFilterHistory,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.LoadHistoryOrderProduct(ViewFilterHistory, long)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCoin(System.Int64,System.Decimal)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error">In member 'IHistoryOrderProductRepository.UpdateCoin(long, decimal)', correct the casing of 'ID' in parameter name 'employeeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.InfomationProduct">
       <Types>
        <Type Name="OrderProductRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckCoin(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="20">In member 'OrderProductRepository.CheckCoin(int, int)', change parameter name 'employeeId' to 'employeeID' in order to match the identifier as it has been declared in 'IOrderProductRepository.CheckCoin(int, int)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="20">In member 'OrderProductRepository.CheckCoin(int, int)', change parameter name 'productId' to 'productID' in order to match the identifier as it has been declared in 'IOrderProductRepository.CheckCoin(int, int)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeductionCoin(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="99">Method 'OrderProductRepository.DeductionCoin(int, int)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "EX : ".</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="67">In member 'OrderProductRepository.DeductionCoin(int, int)', change parameter name 'employeeId' to 'employeeID' in order to match the identifier as it has been declared in 'IOrderProductRepository.DeductionCoin(int, int)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="67">In member 'OrderProductRepository.DeductionCoin(int, int)', change parameter name 'productId' to 'productID' in order to match the identifier as it has been declared in 'IOrderProductRepository.DeductionCoin(int, int)'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="99">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderProductRepository.DeductionCoin(int, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetOrder(System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="106">In member 'OrderProductRepository.GetOrder(long)', change parameter name 'orderId' to 'orderID' in order to match the identifier as it has been declared in 'IOrderProductRepository.GetOrder(long)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderProduct(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="196">Method 'OrderProductRepository.OrderProduct(int, int, int)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "ER: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="194">Modify 'OrderProductRepository.OrderProduct(int, int, int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="158">In member 'OrderProductRepository.OrderProduct(int, int, int)', change parameter name 'employeeId' to 'employeeID' in order to match the identifier as it has been declared in 'IOrderProductRepository.OrderProduct(int, int, int)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="158">In member 'OrderProductRepository.OrderProduct(int, int, int)', change parameter name 'productId' to 'productID' in order to match the identifier as it has been declared in 'IOrderProductRepository.OrderProduct(int, int, int)'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="OrderFoodRepository.cs" Line="196">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'OrderProductRepository.OrderProduct(int, int, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.InformationBookingAds">
       <Types>
        <Type Name="InformationBookingAdsRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Count(BookingAds.Models.InformationBookingAds.ViewFilterBookingAds)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="InformationBookingAdsRepository.cs" Line="32">In externally visible method 'InformationBookingAdsRepository.Count(ViewFilterBookingAds)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetProducts(BookingAds.Models.InformationBookingAds.ViewFilterBookingAds)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\InformationBookingAds" File="InformationBookingAdsRepository.cs" Line="87">In externally visible method 'InformationBookingAdsRepository.GetProducts(ViewFilterBookingAds)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.SelectListHelper">
       <Types>
        <Type Name="SelectListHelperRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ListServices_Customer(System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\SelectListHelper" File="SelectListHelperRepository.cs" Line="15">In member 'SelectListHelperRepository.ListServices_Customer(long)', correct the casing of 'ID' in parameter name 'customerID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\SelectListHelper" File="SelectListHelperRepository.cs" Line="15">Remove the underscores from member name 'SelectListHelperRepository.ListServices_Customer(long)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Repository.Supports">
       <Types>
        <Type Name="SupportsRepository" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_acountRepository" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SupportsRepository._acountRepository' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Count(BookingAds.Models.Supports.ViewFilterSupports,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="202">In externally visible method 'SupportsRepository.Count(ViewFilterSupports, long)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSupports(BookingAds.Models.Supports.ViewCreate,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="121">Method 'SupportsRepository.CreateSupports(ViewCreate, long)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "ER: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="119">Modify 'SupportsRepository.CreateSupports(ViewCreate, long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="121">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SupportsRepository.CreateSupports(ViewCreate, long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="36">In externally visible method 'SupportsRepository.CreateSupports(ViewCreate, long)', validate parameter 'dataview' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSupportsDetail(BookingAds.Models.Supports.ViewDetails,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="328">Method 'SupportsRepository.CreateSupportsDetail(ViewDetails, long)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="326">Modify 'SupportsRepository.CreateSupportsDetail(ViewDetails, long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="279">In member 'SupportsRepository.CreateSupportsDetail(ViewDetails, long)', change parameter name 'customerId' to 'employeeID' in order to match the identifier as it has been declared in 'ISupportsRepository.CreateSupportsDetail(ViewDetails, long)'.</Issue>
            </Message>
            <Message Id="data" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="280">'SupportsRepository.CreateSupportsDetail(ViewDetails, long)' declares a variable, 'data', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="328">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SupportsRepository.CreateSupportsDetail(ViewDetails, long)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="300">In externally visible method 'SupportsRepository.CreateSupportsDetail(ViewDetails, long)', validate parameter 'dataDto' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadSupport(BookingAds.Models.Supports.ViewFilterSupports,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="163">In externally visible method 'SupportsRepository.LoadSupport(ViewFilterSupports, long)', validate parameter 'viewData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadSupportDetail(System.Int64,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="336">In member 'SupportsRepository.LoadSupportDetail(long, long)', change parameter name 'customerID' to 'customerId' in order to match the identifier as it has been declared in 'ISupportsRepository.LoadSupportDetail(long, long)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateStatus(System.Int64)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Repository\Supports" File="SupportsRepository.cs" Line="381">'SupportsRepository.UpdateStatus(long)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Services">
       <Types>
        <Type Name="ChatGPTSendMessageApiService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="GPT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'GPT' in type name 'ChatGPTSendMessageApiService' by changing it to 'Gpt'.</Issue>
          </Message>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'ChatGPTSendMessageApiService'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SendMessage(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMessage" File="ChatGPTSendMessageApiService.cs" Line="49">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'ChatGPTSendMessageApiService.SendMessage(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TwilioSendSMSApiService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="SMS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'SMS' in type name 'TwilioSendSMSApiService' by changing it to 'Sms'.</Issue>
          </Message>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'TwilioSendSMSApiService'.</Issue>
          </Message>
          <Message Id="Twilio" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Twilio' in type name 'TwilioSendSMSApiService'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SendSMS(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendSMS" File="TwilioSendSMSApiService.cs" Line="35">Method 'TwilioSendSMSApiService.SendSMS(string, string)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "From phone ,  send sms to phone ,  with content: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendSMS" File="TwilioSendSMSApiService.cs" Line="39">Modify 'TwilioSendSMSApiService.SendSMS(string, string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="sms" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendSMS" File="TwilioSendSMSApiService.cs" Line="35">Correct the spelling of the unrecognized token 'sms' in the literal '" send sms to phone "'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendSMS" File="TwilioSendSMSApiService.cs" Line="35">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'TwilioSendSMSApiService.SendSMS(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Services.Payment">
       <Types>
        <Type Name="Utils" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in type name 'Utils'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetIpAddress()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="153">Modify 'Utils.GetIpAddress()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="142">Correct the casing of 'Ip' in member name 'Utils.GetIpAddress()' by changing it to 'IP'.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="142">Correct the spelling of 'Ip' in member name 'Utils.GetIpAddress()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="148">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Utils.GetIpAddress()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="142">Change 'Utils.GetIpAddress()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HmacSHA512(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="125">Correct the casing of 'SHA' in member name 'Utils.HmacSHA512(string, string)' by changing it to 'Sha'.</Issue>
            </Message>
            <Message Id="System.Byte.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="134">Because the behavior of 'byte.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Utils.HmacSHA512(string, string)' with a call to 'byte.ToString(string, IFormatProvider)'. If the result of 'byte.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VnPayCompare" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Vn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Vn' in type name 'VnPayCompare' by changing it to 'VN'.</Issue>
          </Message>
          <Message Id="Vn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Vn' in type name 'VnPayCompare'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="VnPayLibrary" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Vn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Vn' in type name 'VnPayLibrary' by changing it to 'VN'.</Issue>
          </Message>
          <Message Id="Vn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Vn' in type name 'VnPayLibrary'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateRequestUrl(System.Uri,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="vnp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="49">In method 'VnPayLibrary.CreateRequestUrl(Uri, string)', correct the spelling of 'vnp' in parameter name 'vnp_HashSecret' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="49">In member 'VnPayLibrary.CreateRequestUrl(Uri, string)', remove the underscores from parameter name 'vnp_HashSecret'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="60">In externally visible method 'VnPayLibrary.CreateRequestUrl(Uri, string)', validate parameter 'baseUrl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateSignature(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\Payment" File="VnPayLibrary.cs" Line="84">'VnPayLibrary.ValidateSignature(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VERSION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="VERSION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VERSION' in member name 'VnPayLibrary.VERSION' by changing it to 'Version'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Services.SendMail">
       <Types>
        <Type Name="SendMailService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SendMail(System.String,System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="57">Replace method 'SendMailService.SendMail(string, string, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="73">In method 'SendMailService.SendMail(string, string, string, bool)', call System.IDisposable.Dispose on object 'new TextPart(...)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="117">Method 'SendMailService.SendMail(string, string, string, bool)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error sending email: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="115">Modify 'SendMailService.SendMail(string, string, string, bool)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="87">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SendMailService.SendMail(string, string, string, bool)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMail(System.String,System.String[],System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="14">Replace method 'SendMailService.SendMail(string, string[], string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="38">In method 'SendMailService.SendMail(string, string[], string, bool)', object 'new TextPart(...)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new TextPart(...)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="45">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SendMailService.SendMail(string, string[], string, bool)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteToLog(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\Admin\Documents\GitHub\Booking-Ads\BookingAds\Services\SendMail" File="SendMailService.cs" Line="126">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'SendMailService.WriteToLog(string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="BookingAds.Services.SendMail.Abstractions">
       <Types>
        <Type Name="ISendMailService" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SendMail(System.String,System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mailTo" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error">In member 'ISendMailService.SendMail(string, string, string, bool)', the compound word 'mailTo' in parameter name 'mailTo' exists as a discrete term. If your usage is intended to be single word, case it as 'mailto' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'ISendMailService.SendMail(string, string, string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMail(System.String,System.String[],System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mailTo" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error">In member 'ISendMailService.SendMail(string, string[], string, bool)', the compound word 'mailTo' in parameter name 'mailTo' exists as a discrete term. If your usage is intended to be single word, case it as 'mailto' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2025-01-09 08:39:34Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'ISendMailService.SendMail(string, string[], string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019">
   <Name>Define accessors for attribute arguments</Name>
   <Description>Provide accessors for both named and positional arguments. Each positional argument on an attribute should declare a read-only property with the same name (but different casing). Each named argument should provide a read/write property with the same name (but different casing).</Description>
   <Resolution Name="Default">Add a public read-only property accessor for positional argument {0} of Attribute {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182136.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
   <Name>Do not declare static members on generic types</Name>
   <Description>The syntax for calling static members on generic types is complex as the type parameter has to be specified for each call.</Description>
   <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182139.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018">
   <Name>Mark attributes with AttributeUsageAttribute</Name>
   <Description>The AttributeUsage attribute specifies the targets that are valid for the attribute (see System.AttributeTargets), whether an attribute can appear on a target more than once, and whether the attribute is inheritable.</Description>
   <Resolution Name="Default">Specify AttributeUsage on {0}.</Resolution>
   <Resolution Name="Inherited">Even though attribute {0} inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182158.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="Default">The type name {0} conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
   <Name>Use ordinal StringComparison</Name>
   <Description>For non-linguistic comparisons, StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase should be used instead of the linguistically-sensitive StringComparison.InvariantCulture.</Description>
   <Resolution Name="StringComparison">{0} passes '{1}' as the 'StringComparison' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385972.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="Type">Replace the term '{0}' in type name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
